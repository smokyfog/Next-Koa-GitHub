{"version":3,"file":"static\\development\\pages\\test\\b.js","sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_01f9a3fa864a7b7414d8","webpack:///./pages/test/b.js","webpack:///external \"dll_01f9a3fa864a7b7414d8\""],"sourcesContent":["\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/test/b\", function() {\n      var page = require(\"D:\\\\study\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\test\\\\b.js\")\n      if(module.hot) {\n        module.hot.accept(\"D:\\\\study\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\test\\\\b.js\", function() {\n          if(!next.router.components[\"/test/b\"]) return\n          var updatedPage = require(\"D:\\\\study\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\test\\\\b.js\")\n          next.router.update(\"/test/b\", updatedPage.default || updatedPage)\n        })\n      }\n      return { page: page.default || page }\n    }]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_01f9a3fa864a7b7414d8 */ \"dll-reference dll_01f9a3fa864a7b7414d8\"))(\"./node_modules/react/index.js\");","import \r\n  React, \r\n  { \r\n    useState, \r\n    useReducer, \r\n    useEffect, \r\n    useLayoutEffect,\r\n    useContext, \r\n    useRef,\r\n    memo,\r\n    useMemo,\r\n    useCallback\r\n  } from 'react'\r\n\r\nfunction countReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return state + 1\r\n    case 'minus':\r\n      return state - 1\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction MyCountFunc() {\r\n  const [ count, dispatchCount ] = useReducer(countReducer, 0)\r\n  const [ name, setName ] = useState('jock')\r\n\r\n  const config = useMemo(\r\n    () => ({\r\n      text:  `count is ${count}`,\r\n      color: count > 3 ? 'red' : 'blue',\r\n    }\r\n  ), [count])\r\n\r\n  const handleButtonClick = useCallback(\r\n    () =>  dispatchCount({ type: 'add' }), \r\n    []\r\n  )\r\n\r\n  //这里我们也可以用useMemo来记忆方法,实际上useCallback就是useMemo的简化\r\n  // const handleButtonClick = useMemo(\r\n  //   () => () => dispatchCount({ type: 'add' }),\r\n  //   []\r\n  // )\r\n  const handleAlertClick = function () {\r\n    setTimeout(() => {\r\n      alert(count)\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input value={ name } onChange={(e) => setName(e.target.value)} />\r\n      <Child\r\n        config={config}\r\n        onButtonClick={handleButtonClick}\r\n      />\r\n      <button  onClick ={ handleAlertClick }>AlertCount</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Child = memo(function Child({ onButtonClick, config }) {\r\n   console.log('child render')\r\n   return (\r\n     <button onClick={ onButtonClick } style={{color: config.color}}>\r\n       {config.text}\r\n     </button>\r\n   )\r\n}) \r\n\r\nexport default MyCountFunc","module.exports = dll_01f9a3fa864a7b7414d8;"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;ACAA;AACA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACzEA;;;;A","sourceRoot":""}