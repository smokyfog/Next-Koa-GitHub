{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.a88476fc9c192889026b.hot-update.js","sources":["webpack:///./lib/with-redux.js"],"sourcesContent":["\r\nimport React from 'react'\r\nimport createSore from '../store/store'\r\nconst isServer = typeof window === 'undefined'\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    return createSore(initialState)\r\n  }\r\n\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = createSore(initialState)\r\n  }\r\n  return window[__NEXT_REDUX_STORE__]\r\n}\r\n\r\nexport default Comp => {\r\n  class WithReduxApp extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\r\n    }\r\n    render() {\r\n      const { Component, pageProps, ... rest } = this.props\r\n      if(pageProps) {\r\n        pageProps.test = '123'\r\n      }\r\n      return <Comp Component={Component}  pageProps={pageProps} {...rest}  reduxStore={this.reduxStore} />\r\n    }\r\n  }\r\n  WithReduxApp.getInitialProps = async ctx => {\r\n    const reduxStore = getOrCreateStore()\r\n\r\n    ctx.reduxStore = reduxStore\r\n\r\n    let appProps = {}\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx)\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState()\r\n    }\r\n  }\r\n  return WithReduxApp\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AANA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAZA;AACA;AADA;AAAA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAYA;AAZA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;;;;A","sourceRoot":""}