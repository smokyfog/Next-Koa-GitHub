webpackHotUpdate("static\\development\\pages\\detail\\issues.js",{

/***/ "./pages/detail/issues.jsx":
/*!*********************************!*\
  !*** ./pages/detail/issues.jsx ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs2/core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js");
/* harmony import */ var _babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js");
/* harmony import */ var _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js");
/* harmony import */ var _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js");
/* harmony import */ var antd_lib_avatar_style_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd/lib/avatar/style/css */ "./node_modules/antd/lib/avatar/style/css.js");
/* harmony import */ var antd_lib_avatar_style_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd_lib_avatar_style_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var antd_lib_avatar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/avatar */ "./node_modules/antd/lib/avatar/index.js");
/* harmony import */ var antd_lib_avatar__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_avatar__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var antd_lib_button_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! antd/lib/button/style/css */ "./node_modules/antd/lib/button/style/css.js");
/* harmony import */ var antd_lib_button_style_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button_style_css__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! antd/lib/button */ "./node_modules/antd/lib/button/index.js");
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var antd_lib_select_style_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd/lib/select/style/css */ "./node_modules/antd/lib/select/style/css.js");
/* harmony import */ var antd_lib_select_style_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style_css__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _components_WithRepoBasic__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/WithRepoBasic */ "./components/WithRepoBasic.jsx");
/* harmony import */ var _components_MarkdownRenderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/MarkdownRenderer */ "./components/MarkdownRenderer.jsx");
/* harmony import */ var _components_SearchUser__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/SearchUser */ "./components/SearchUser.jsx");
/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../lib/api */ "./lib/api.js");
/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_lib_api__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../lib/util */ "./lib/util.js");
/* harmony import */ var _lib_client_cache__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../lib/client-cache */ "./lib/client-cache.js");












var __jsx = react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement;








var Option = antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a.Option;

var _initCache = Object(_lib_client_cache__WEBPACK_IMPORTED_MODULE_18__["default"])({
  genCacheKeyStrate: function genCacheKeyStrate(context) {
    return Object(_lib_util__WEBPACK_IMPORTED_MODULE_17__["genDetailCacheKeyStrate"])(context);
  }
}),
    cache = _initCache.cache,
    useCache = _initCache.useCache;

var IssueDetail = function IssueDetail(_ref) {
  var issue = _ref.issue;
  return __jsx("div", {
    className: "jsx-3019013689" + " " + "root"
  }, __jsx(_components_MarkdownRenderer__WEBPACK_IMPORTED_MODULE_14__["default"], {
    content: issue.body
  }), __jsx("div", {
    className: "jsx-3019013689" + " " + "actions"
  }, __jsx(antd_lib_button__WEBPACK_IMPORTED_MODULE_7___default.a, {
    href: issue.html_url,
    target: "_blank"
  }, "\u6253\u5F00issue\u8BA8\u8BBA\u9875\u9762")), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_10___default.a, {
    id: "3019013689"
  }, ".root.jsx-3019013689{background:#fefefe;padding:20px;}.actions.jsx-3019013689{text-align:right;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\issues.jsx */"));
};

var Label = function Label(_ref2) {
  var label = _ref2.label;
  return __jsx(react__WEBPACK_IMPORTED_MODULE_11___default.a.Fragment, null, __jsx("span", {
    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_10___default.a.dynamic([["1901604367", [label.color]]]) + " " + "label"
  }, label.name, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_10___default.a, {
    id: "1901604367",
    dynamic: [label.color]
  }, ".label.__jsx-style-dynamic-selector{margin-left:8px;height:20px;padding:.15em 4px;font-size:12px;font-weight:600;line-height:15px;border-radius:2px;box-shadow:inset 0 -1px 0 rgba(27,31,35,.12);background-color:#".concat(label.color, ";}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\issues.jsx */"))));
};

var IssueItem = function IssueItem(_ref3) {
  var issue = _ref3.issue;

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_11__["useState"])(false),
      showDetail = _useState[0],
      setShowDetail = _useState[1];

  var toggleShowDetail = Object(react__WEBPACK_IMPORTED_MODULE_11__["useCallback"])(function () {
    setShowDetail(function (show) {
      return !show;
    });
  }, []);
  return __jsx("div", {
    className: "jsx-1792689352" + " " + "root"
  }, __jsx("div", {
    className: "jsx-1792689352" + " " + "issue"
  }, __jsx(antd_lib_button__WEBPACK_IMPORTED_MODULE_7___default.a, {
    onClick: toggleShowDetail,
    className: "view-btn",
    type: "primary",
    size: "small"
  }, "\u67E5\u770B"), __jsx("div", {
    className: "jsx-1792689352" + " " + "avatar"
  }, __jsx(antd_lib_avatar__WEBPACK_IMPORTED_MODULE_5___default.a, {
    src: issue.user.avatar_url,
    shape: "square",
    size: 50
  })), __jsx("div", {
    className: "jsx-1792689352" + " " + "main-info"
  }, __jsx("h6", {
    className: "jsx-1792689352"
  }, __jsx("span", {
    className: "jsx-1792689352"
  }, issue.title), issue.labels.map(function (label) {
    return __jsx(Label, {
      label: label,
      key: label.id
    });
  })), __jsx("p", {
    className: "jsx-1792689352" + " " + "sub-info"
  }, __jsx("span", {
    className: "jsx-1792689352"
  }, "Updated at ", Object(_lib_util__WEBPACK_IMPORTED_MODULE_17__["getTimeFromNow"])(issue.updated_at))))), showDetail ? __jsx(IssueDetail, {
    issue: issue
  }) : null, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_10___default.a, {
    id: "1792689352"
  }, ".view-btn{position:absolute;right:10px;top:10px;}.root.jsx-1792689352+.root.jsx-1792689352{border-top:1px solid #eee;}.issue.jsx-1792689352{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-1792689352:hover{background:#fafafa;}.main-info.jsx-1792689352>h6.jsx-1792689352{padding-right:40px;font-size:16px;word-break:break-all;}.avatar.jsx-1792689352{margin-right:20px;}.sub-info.jsx-1792689352{margin-bottom:0;}.sub-info.jsx-1792689352>span.jsx-1792689352+span.jsx-1792689352{display:inline-block;margin-left:20px;font-size:12px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\issues.jsx */"));
};

function makeQuery(creator, state, labels) {
  var creatorStr = creator ? "creator=".concat(creator) : '';
  var stateStr = state ? "state=".concat(state) : '';
  var labelStr = '';

  if (labels && labels.length > 0) {
    labelStr = "labels=".concat(labels.join(','));
  }

  var arr = [];

  if (creatorStr) {
    arr.push(creatorStr);
  }

  if (stateStr) {
    arr.push(stateStr);
  }

  if (labelStr) {
    arr.push(labelStr);
  }

  return "?".concat(arr.join('&'));
}

var Issues = function Issues(_ref4) {
  var services = _ref4.services;
  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_12__["useRouter"])();
  useCache(Object(_lib_util__WEBPACK_IMPORTED_MODULE_17__["genDetailCacheKey"])(router), {
    services: services
  });
  var initIssues = services.initIssues,
      labels = services.labels;

  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_11__["useState"])(),
      creator = _useState2[0],
      setCreator = _useState2[1];

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_11__["useState"])(),
      issueState = _useState3[0],
      setIssueState = _useState3[1];

  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_11__["useState"])([]),
      selectedLabels = _useState4[0],
      setSelectedLabels = _useState4[1];

  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_11__["useState"])(initIssues),
      issues = _useState5[0],
      setIssues = _useState5[1];

  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_11__["useState"])(false),
      fetching = _useState6[0],
      setFetching = _useState6[1];

  var handleLabelsChange = function handleLabelsChange(selected) {
    setSelectedLabels(selected);
  };

  var _router$query = router.query,
      owner = _router$query.owner,
      name = _router$query.name;

  var handleSearch =
  /*#__PURE__*/
  function () {
    var _ref5 = Object(_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(
    /*#__PURE__*/
    _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {
      var _ref6, resultIssues;

      return _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setFetching(true);
              _context.next = 3;
              return Object(_lib_api__WEBPACK_IMPORTED_MODULE_16__["request"])({
                url: "/repos/".concat(owner, "/").concat(name, "/issues").concat(makeQuery(creator, issueState, selectedLabels))
              });

            case 3:
              _ref6 = _context.sent;
              resultIssues = _ref6.data;
              setIssues(resultIssues);
              setFetching(false);

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function handleSearch() {
      return _ref5.apply(this, arguments);
    };
  }();

  var selectCommenStyle = {
    alignSelf: 'flex-start',
    width: 200,
    marginLeft: 20
  };
  return __jsx("div", {
    className: "jsx-33133419" + " " + "root"
  }, __jsx("div", {
    className: "jsx-33133419" + " " + "search"
  }, __jsx(_components_SearchUser__WEBPACK_IMPORTED_MODULE_15__["default"], {
    style: selectCommenStyle,
    value: creator,
    onChange: setCreator
  }), __jsx(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
    allowClear: true,
    onChange: setIssueState,
    value: issueState,
    placeholder: "\u72B6\u6001",
    style: selectCommenStyle
  }, __jsx(Option, {
    value: "all"
  }, "\u5168\u90E8"), __jsx(Option, {
    value: "open"
  }, "open"), __jsx(Option, {
    value: "closed"
  }, "closed")), __jsx(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
    allowClear: true,
    mode: "multiple",
    onChange: handleLabelsChange,
    value: selectedLabels,
    placeholder: "Label",
    style: {
      flexGrow: 1,
      width: 200,
      margin: '0 20px'
    }
  }, labels.map(function (label) {
    return __jsx(Option, {
      value: label.id,
      key: label.id
    }, label.name);
  })), __jsx(antd_lib_button__WEBPACK_IMPORTED_MODULE_7___default.a, {
    loading: fetching,
    onClick: handleSearch,
    size: "small",
    type: "primary",
    style: {
      marginRight: 11
    }
  }, "\u641C\u7D22")), __jsx("div", {
    className: "jsx-33133419" + " " + "issues"
  }, issues.map(function (issue) {
    return __jsx(IssueItem, {
      key: issue.id,
      issue: issue
    });
  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_10___default.a, {
    id: "33133419"
  }, ".issues.jsx-33133419{border:1px solid #eee;border-radius:5px;margin-bottom:20px;margin-top:20px;}.search.jsx-33133419{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\issues.jsx */"));
};

Issues.getInitialProps = cache(
/*#__PURE__*/
function () {
  var _ref8 = Object(_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(
  /*#__PURE__*/
  _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2(_ref7) {
    var ctx, _ctx$query, owner, name, _ref9, _ref10, labels;

    return _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            ctx = _ref7.ctx;
            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;
            _context2.next = 4;
            return _babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default.a.all([// request(
            //   {
            //     url: `/repos/${owner}/${name}/issues`,
            //   },
            //   ctx.req,
            //   ctx.res,
            // ),
            Object(_lib_api__WEBPACK_IMPORTED_MODULE_16__["request"])({
              url: "/repos/".concat(owner, "/").concat(name, "/labels")
            }, ctx.req, ctx.res)]);

          case 4:
            _ref9 = _context2.sent;
            _ref10 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_ref9, 1);
            labels = _ref10[0].data;
            console.log('initIssues', initIssues);
            console.log('labels', labels);
            return _context2.abrupt("return", {
              services: {
                initIssues: [],
                labels: labels
              }
            });

          case 10:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function (_x) {
    return _ref8.apply(this, arguments);
  };
}());
/* harmony default export */ __webpack_exports__["default"] = (Object(_components_WithRepoBasic__WEBPACK_IMPORTED_MODULE_13__["default"])(Issues, 'issues'));

/***/ })

})
//# sourceMappingURL=issues.js.468a2a2ad782369b9049.hot-update.js.map