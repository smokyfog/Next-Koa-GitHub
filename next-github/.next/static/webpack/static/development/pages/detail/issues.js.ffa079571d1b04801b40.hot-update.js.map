{"version":3,"file":"static/webpack/static\\development\\pages\\detail\\issues.js.ffa079571d1b04801b40.hot-update.js","sources":["webpack:///./pages/detail/issues.jsx"],"sourcesContent":["import { useState, useCallback } from 'react'\r\nimport { Avatar, Button, Select } from 'antd'\r\nimport { useRouter } from 'next/router'\r\nimport WithRepoBasic from '../../components/WithRepoBasic'\r\nimport MarkdownRenderer from '../../components/MarkdownRenderer'\r\nimport SearchUser from '../../components/SearchUser'\r\nimport { request } from '../../lib/api'\r\nimport { getTimeFromNow, genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util'\r\nimport initCache from '../../lib/client-cache'\r\n\r\nconst { Option } = Select\r\n\r\nconst { cache, useCache } = initCache({\r\n  genCacheKeyStrate: (context) => {\r\n    return genDetailCacheKeyStrate(context)\r\n  },\r\n})\r\n\r\nconst IssueDetail = ({ issue }) => {\r\n  return (\r\n    <div className=\"root\">\r\n      <MarkdownRenderer content={issue.body} />\r\n      <div className=\"actions\">\r\n        <Button href={issue.html_url} target=\"_blank\">打开issue讨论页面</Button>\r\n      </div>\r\n      <style jsx>{`\r\n        .root {\r\n          background: #fefefe;\r\n          padding: 20px;\r\n        }\r\n        \r\n        .actions {\r\n          text-align: right;\r\n        }\r\n      `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Label = ({ label }) => {\r\n  return (\r\n    <>\r\n      <span\r\n        className=\"label\"\r\n      >\r\n        {label.name}\r\n        <style jsx>{`\r\n        .label {\r\n          margin-left: 8px;\r\n          height: 20px;\r\n          padding: .15em 4px;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          line-height: 15px;\r\n          border-radius: 2px;\r\n          box-shadow: inset 0 -1px 0 rgba(27,31,35,.12);\r\n          background-color: #${label.color};\r\n        }\r\n      `}\r\n        </style>\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nconst IssueItem = ({ issue }) => {\r\n  const [showDetail, setShowDetail] = useState(false)\r\n\r\n  const toggleShowDetail = useCallback(() => {\r\n    setShowDetail((show) => !show)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"issue\">\r\n        <Button\r\n          onClick={toggleShowDetail}\r\n          className=\"view-btn\"\r\n          type=\"primary\"\r\n          size=\"small\"\r\n        >查看\r\n        </Button>\r\n        <div className=\"avatar\">\r\n          <Avatar src={issue.user.avatar_url} shape=\"square\" size={50} />\r\n        </div>\r\n        <div className=\"main-info\">\r\n          <h6>\r\n            <span>{issue.title}</span>\r\n            {\r\n              issue.labels.map((label) => <Label label={label} key={label.id} />)\r\n            }\r\n          </h6>\r\n          <p className=\"sub-info\">\r\n            <span>Updated at {getTimeFromNow(issue.updated_at)}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {showDetail ? <IssueDetail issue={issue} /> : null}\r\n      <style jsx>\r\n        {`\r\n          :global(.view-btn) {\r\n            position: absolute;\r\n            right: 10px;\r\n            top: 10px\r\n          }\r\n\r\n          .root + .root {\r\n            border-top: 1px solid #eee;\r\n          }\r\n\r\n          .issue {\r\n            display: flex;\r\n            position: relative;\r\n            padding: 10px;\r\n          }\r\n\r\n          .issue:hover {\r\n            background: #fafafa;\r\n          }\r\n\r\n          .main-info > h6 {\r\n            padding-right: 40px;\r\n            font-size: 16px;\r\n            word-break: break-all;\r\n          }\r\n\r\n          .avatar {\r\n            margin-right: 20px;\r\n          }\r\n\r\n          .sub-info {\r\n            margin-bottom: 0;\r\n          }\r\n\r\n          .sub-info > span + span {\r\n            display: inline-block;\r\n            margin-left: 20px;\r\n            font-size: 12px;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction makeQuery(creator, state, labels) {\r\n  const creatorStr = creator ? `creator=${creator}` : ''\r\n  const stateStr = state ? `state=${state}` : ''\r\n  let labelStr = ''\r\n  if (labels && labels.length > 0) {\r\n    labelStr = `labels=${labels.join(',')}`\r\n  }\r\n\r\n  const arr = []\r\n\r\n  if (creatorStr) {\r\n    arr.push(creatorStr)\r\n  }\r\n  if (stateStr) {\r\n    arr.push(stateStr)\r\n  }\r\n  if (labelStr) {\r\n    arr.push(labelStr)\r\n  }\r\n\r\n  return `?${arr.join('&')}`\r\n}\r\n\r\nconst Issues = ({ services }) => {\r\n  const router = useRouter()\r\n  useCache(genDetailCacheKey(router), { services })\r\n\r\n  const { initIssues, labels } = services\r\n  const [creator, setCreator] = useState()\r\n  const [issueState, setIssueState] = useState()\r\n  const [selectedLabels, setSelectedLabels] = useState([])\r\n  const [issues, setIssues] = useState(initIssues)\r\n  const [fetching, setFetching] = useState(false)\r\n  const handleLabelsChange = (selected) => {\r\n    setSelectedLabels(selected)\r\n  }\r\n\r\n  const { owner, name } = router.query\r\n  const handleSearch = async () => {\r\n    setFetching(true)\r\n    const { data: resultIssues } = await request({\r\n      url: `/repos/${owner}/${name}/issues${makeQuery(creator, issueState, selectedLabels)}`,\r\n    })\r\n    setIssues(resultIssues)\r\n    setFetching(false)\r\n  }\r\n\r\n  const selectCommenStyle = {\r\n    alignSelf: 'flex-start',\r\n    width: 200,\r\n    marginLeft: 20,\r\n  }\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"search\">\r\n        <SearchUser\r\n          style={selectCommenStyle}\r\n          value={creator}\r\n          onChange={setCreator}\r\n        />\r\n        <Select\r\n          allowClear\r\n          onChange={setIssueState}\r\n          value={issueState}\r\n          placeholder=\"状态\"\r\n          style={selectCommenStyle}\r\n        >\r\n          <Option value=\"all\">全部</Option>\r\n          <Option value=\"open\">open</Option>\r\n          <Option value=\"closed\">closed</Option>\r\n        </Select>\r\n\r\n        <Select\r\n          allowClear\r\n          mode=\"multiple\"\r\n          onChange={handleLabelsChange}\r\n          value={selectedLabels}\r\n          placeholder=\"Label\"\r\n          style={{ flexGrow: 1, width: 200, margin: '0 20px' }}\r\n        >\r\n          {labels.map((label) => (\r\n            <Option value={label.id} key={label.id}>\r\n              {label.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <Button\r\n          loading={fetching}\r\n          onClick={handleSearch}\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          style={{ marginRight: 11 }}\r\n        >\r\n          搜索\r\n        </Button>\r\n      </div>\r\n      <div className=\"issues\">\r\n        {issues.map((issue) => {\r\n          return <IssueItem key={issue.id} issue={issue} />\r\n        })}\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          .issues {\r\n            border: 1px solid #eee;\r\n            border-radius: 5px;\r\n            margin-bottom: 20px;\r\n            margin-top: 20px;\r\n          }\r\n\r\n          .search {\r\n            display: flex;\r\n            align-items: center;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\nIssues.getInitialProps = cache(async ({ ctx }) => {\r\n  const { owner, name } = ctx.query\r\n  // const [\r\n  //   // { data: initIssues },\r\n  //   { data: labels },\r\n  // ] = await Promise.all(\r\n  //   [\r\n  //     // request(\r\n  //     //   {\r\n  //     //     url: `/repos/${owner}/${name}/issues`,\r\n  //     //   },\r\n  //     //   ctx.req,\r\n  //     //   ctx.res,\r\n  //     // ),\r\n  //     request(\r\n  //       {\r\n  //         url: `/repos/${owner}/${name}/labels`,\r\n  //       },\r\n  //       ctx.req,\r\n  //       ctx.res,\r\n  //     ),\r\n  //   ],\r\n  // )\r\n\r\n\r\n  return {\r\n    services: {\r\n      initIssues:[],\r\n      labels:[],\r\n    },\r\n  }\r\n})\r\n\r\nexport default WithRepoBasic(Issues, 'issues')\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAkBA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAxBA;AAAA;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AAGA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AACA;AAAA;AAAA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AA9CA;AAAA;AAiEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AA0BA;AACA;AACA;AAFA;AADA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAiCA;;;;A","sourceRoot":""}