{"version":3,"file":"static/webpack/static\\development\\pages\\test\\ccc.js.7a0b9a7d304dbf47a262.hot-update.js","sources":["webpack:///./pages/test/ccc.js"],"sourcesContent":["import React, { useState, useReducer, useEffect } from 'react'\r\n\r\nclass MyCount extends React.Component {\r\n  state = {\r\n    count: 0\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState({ count: this.state.count + 1 })\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval)\r\n    }\r\n  }\r\n  render () {\r\n    return <span>{ this.state.count }</span>\r\n  }\r\n}\r\n\r\nfunction countReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return state + 1\r\n    case 'minus':\r\n      return state - 1\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction MyCountFunc() {\r\n  // const [ count, setCount ] = useState(0) // [a, b]\r\n\r\n  const [ count, dispatchCount ] = useReducer(countReducer)\r\n  \r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // setCount用法\r\n      // setCount(1)\r\n      // setCount((c) => c + 1 )\r\n      // setCount(c => c + 1)\r\n      dispatchCount({ type: add })\r\n    }, 1000)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <span>{ count }</span>\r\n}\r\n\r\nexport default MyCountFunc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}