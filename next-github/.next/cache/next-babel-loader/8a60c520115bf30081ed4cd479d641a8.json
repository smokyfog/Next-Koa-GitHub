{"ast":null,"code":"const axios = require('axios');\n\nconst github_base_url = 'https://api.github.com';\n\nasync function requestGithub(method, url, data, headers) {\n  return await axios({\n    method,\n    url: `${github_base_url}${url}`,\n    data,\n    headers\n  });\n}\n\nconst isServer = true;\n\nasync function request({\n  method = 'GET',\n  url,\n  data = {}\n}, req, res) {\n  if (!url) {\n    throw Error('url is provide');\n  }\n\n  if (isServer) {\n    const session = req.session;\n    const githubAuth = session.githubAuth || {};\n    const headers = {};\n\n    if (githubAuth.access_token) {\n      headers['Authorization'] = `${githubAuth.token_type} ${githubAuth.access_token}`;\n    }\n\n    return await requestGithub(method, url, data, headers);\n  } else {\n    return await axios({\n      method,\n      url: `/github${url}`,\n      data\n    });\n  }\n}\n\nmodule.exports = {\n  request,\n  requestGithub\n};","map":{"version":3,"sources":["D:\\study\\Next-Koa-GitHub\\next-github\\lib\\api.js"],"names":["axios","require","github_base_url","requestGithub","method","url","data","headers","isServer","request","req","res","Error","session","githubAuth","access_token","token_type","module","exports"],"mappings":"AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,eAAe,GAAG,wBAAxB;;AAEA,eAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,EAAgDC,OAAhD,EAAyD;AACvD,SAAO,MAAMP,KAAK,CAAC;AACjBI,IAAAA,MADiB;AAEjBC,IAAAA,GAAG,EAAG,GAAEH,eAAgB,GAAEG,GAAI,EAFb;AAGjBC,IAAAA,IAHiB;AAIjBC,IAAAA;AAJiB,GAAD,CAAlB;AAMD;;AAED,MAAMC,QAAQ,OAAd;;AACA,eAAeC,OAAf,CAAuB;AAAEL,EAAAA,MAAM,GAAG,KAAX;AAAkBC,EAAAA,GAAlB;AAAuBC,EAAAA,IAAI,GAAE;AAA7B,CAAvB,EAA0DI,GAA1D,EAA+DC,GAA/D,EAAoE;AAClE,MAAG,CAACN,GAAJ,EAAS;AACP,UAAMO,KAAK,CAAC,gBAAD,CAAX;AACD;;AACD,MAAIJ,QAAJ,EAAc;AACZ,UAAMK,OAAO,GAAGH,GAAG,CAACG,OAApB;AACA,UAAMC,UAAU,GAAGD,OAAO,CAACC,UAAR,IAAsB,EAAzC;AACA,UAAMP,OAAO,GAAG,EAAhB;;AACA,QAAIO,UAAU,CAACC,YAAf,EAA6B;AAC3BR,MAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,GAAEO,UAAU,CAACE,UAAW,IAAGF,UAAU,CAACC,YAAa,EAA/E;AACD;;AACD,WAAO,MAAMZ,aAAa,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,CAA1B;AACD,GARD,MAQO;AACL,WAAO,MAAMP,KAAK,CAAC;AACjBI,MAAAA,MADiB;AAEjBC,MAAAA,GAAG,EAAG,UAASA,GAAI,EAFF;AAGjBC,MAAAA;AAHiB,KAAD,CAAlB;AAKD;AACF;;AAGDW,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,OADe;AAEfN,EAAAA;AAFe,CAAjB","sourcesContent":["\r\nconst axios = require('axios')\r\n\r\nconst github_base_url = 'https://api.github.com'\r\n\r\nasync function requestGithub(method, url, data, headers) {\r\n  return await axios({\r\n    method,\r\n    url: `${github_base_url}${url}`,\r\n    data,\r\n    headers\r\n  })\r\n}\r\n\r\nconst isServer = typeof window === 'undefined'\r\nasync function request({ method = 'GET', url, data= {} }, req, res) {\r\n  if(!url) {\r\n    throw Error('url is provide')\r\n  }\r\n  if (isServer) {\r\n    const session = req.session\r\n    const githubAuth = session.githubAuth || {}\r\n    const headers = {}\r\n    if (githubAuth.access_token) {\r\n      headers['Authorization'] = `${githubAuth.token_type} ${githubAuth.access_token}`\r\n    }\r\n    return await requestGithub(method, url, data, headers)\r\n  } else {\r\n    return await axios({\r\n      method,\r\n      url: `/github${url}`,\r\n      data\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  request,\r\n  requestGithub\r\n}"]},"metadata":{},"sourceType":"script"}