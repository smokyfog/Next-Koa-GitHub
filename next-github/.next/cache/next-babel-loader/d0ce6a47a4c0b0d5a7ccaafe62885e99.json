{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport { request } from '../lib/api';\nvar Option = _Select.Option;\n\nfunction SearchUser(_ref) {\n  var onChange = _ref.onChange,\n      value = _ref.value,\n      style = _ref.style;\n\n  var _useState = useState(false),\n      fetching = _useState[0],\n      setFetching = _useState[1];\n\n  var _useState2 = useState([]),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var lastFetchIdRef = useRef(0);\n  var fetchUser = useCallback(debounce(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(searchValue, fetchId) {\n      var _ref3, data, userOptions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setFetching(true);\n              setOptions([]);\n              _context.next = 4;\n              return request({\n                url: \"/search/users?q=\".concat(searchValue)\n              });\n\n            case 4:\n              _ref3 = _context.sent;\n              data = _ref3.data;\n              userOptions = data.items.map(function (user) {\n                return {\n                  text: user.login,\n                  value: user.login\n                };\n              });\n\n              if (fetchId === lastFetchIdRef.current) {\n                setOptions(userOptions);\n              } else {\n                setOptions([]);\n              }\n\n              setFetching(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), 500), []);\n\n  var fetchUserBefore = function fetchUserBefore(searchValue) {\n    lastFetchIdRef.current += 1;\n\n    if (searchValue.trim()) {\n      return fetchUser(searchValue, lastFetchIdRef.current);\n    }\n\n    return null;\n  };\n\n  var handleChange = function handleChange(selectValue) {\n    onChange(selectValue);\n    setOptions([]);\n  };\n\n  return __jsx(_Select, {\n    allowClear: true,\n    showSearch: true,\n    value: value,\n    onChange: handleChange,\n    onSearch: fetchUserBefore,\n    notFoundContent: fetching ? __jsx(_Spin, {\n      size: \"small\"\n    }) : __jsx(\"span\", null, \"\\u627E\\u4E0D\\u5230\\u7528\\u6237\") // 禁用本地搜索\n    ,\n    filterOption: false,\n    placeholder: \"\\u521B\\u5EFA\\u8005\",\n    style: _objectSpread({\n      width: 200\n    }, style)\n  }, options.map(function (option) {\n    var optionValue = option.value,\n        optionText = option.text;\n    return __jsx(Option, {\n      key: optionValue,\n      value: optionValue\n    }, optionText);\n  }));\n}\n\nexport default SearchUser;","map":{"version":3,"sources":["D:\\reactStudy\\Next-Koa-GitHub\\next-github\\components\\SearchUser.jsx"],"names":["useState","useCallback","useRef","debounce","request","Option","SearchUser","onChange","value","style","fetching","setFetching","options","setOptions","lastFetchIdRef","fetchUser","searchValue","fetchId","url","data","userOptions","items","map","user","text","login","current","fetchUserBefore","trim","handleChange","selectValue","width","option","optionValue","optionText"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef } from 'react'\r\nimport { Select, Spin } from 'antd'\r\nimport debounce from 'lodash/debounce'\r\nimport { request } from '../lib/api'\r\n\r\nconst { Option } = Select\r\n\r\nfunction SearchUser({ onChange, value, style }) {\r\n  const [fetching, setFetching] = useState(false)\r\n  const [options, setOptions] = useState([])\r\n  const lastFetchIdRef = useRef(0)\r\n\r\n  const fetchUser = useCallback(\r\n    debounce(\r\n      async (searchValue, fetchId) => {\r\n        setFetching(true)\r\n        setOptions([])\r\n        const { data } = await request({\r\n          url: `/search/users?q=${searchValue}`,\r\n        })\r\n        const userOptions = data.items.map(((user) => ({\r\n          text: user.login,\r\n          value: user.login,\r\n        })))\r\n\r\n        if (fetchId === lastFetchIdRef.current) {\r\n          setOptions(userOptions)\r\n        } else {\r\n          setOptions([])\r\n        }\r\n        setFetching(false)\r\n      },\r\n      500,\r\n    ),\r\n    [],\r\n  )\r\n\r\n  const fetchUserBefore = (searchValue) => {\r\n    lastFetchIdRef.current += 1\r\n    if (searchValue.trim()) {\r\n      return fetchUser(searchValue, lastFetchIdRef.current)\r\n    }\r\n    return null\r\n  }\r\n\r\n  const handleChange = (selectValue) => {\r\n    onChange(selectValue)\r\n    setOptions([])\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      allowClear\r\n      showSearch\r\n      value={value}\r\n      onChange={handleChange}\r\n      onSearch={fetchUserBefore}\r\n      notFoundContent={fetching ? <Spin size=\"small\" /> : <span>找不到用户</span>}\r\n      // 禁用本地搜索\r\n      filterOption={false}\r\n      placeholder=\"创建者\"\r\n      style={({ width: 200, ...style })}\r\n    >\r\n      {options.map((option) => {\r\n        const {\r\n          value: optionValue,\r\n          text: optionText,\r\n        } = option\r\n        return (\r\n          <Option key={optionValue} value={optionValue}>\r\n            {optionText}\r\n          </Option>\r\n        )\r\n      })}\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default SearchUser\r\n"]},"metadata":{},"sourceType":"module"}