{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport WithRepoBasic from '../../components/WithRepoBasic';\nimport MarkdownRenderer from '../../components/MarkdownRenderer';\nimport SearchUser from '../../components/SearchUser';\nimport { request } from '../../lib/api';\nimport { getTimeFromNow, genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util';\nimport initCache from '../../lib/client-cache';\nvar Option = _Select.Option;\n\nvar _initCache = initCache({\n  genCacheKeyStrate: function genCacheKeyStrate(context) {\n    return genDetailCacheKeyStrate(context);\n  }\n}),\n    cache = _initCache.cache,\n    useCache = _initCache.useCache;\n\nvar IssueDetail = function IssueDetail(_ref) {\n  var issue = _ref.issue;\n  return __jsx(\"div\", {\n    className: \"jsx-3019013689\" + \" \" + \"root\"\n  }, __jsx(MarkdownRenderer, {\n    content: issue.body\n  }), __jsx(\"div\", {\n    className: \"jsx-3019013689\" + \" \" + \"actions\"\n  }, __jsx(_Button, {\n    href: issue.html_url,\n    target: \"_blank\"\n  }, \"\\u6253\\u5F00issue\\u8BA8\\u8BBA\\u9875\\u9762\")), __jsx(_JSXStyle, {\n    id: \"3019013689\"\n  }, \".root.jsx-3019013689{background:#fefefe;padding:20px;}.actions.jsx-3019013689{text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxyZWFjdFN0dWR5XFxOZXh0LUtvYS1HaXRIdWJcXG5leHQtZ2l0aHViXFxwYWdlc1xcZGV0YWlsXFxpc3N1ZXMuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCa0IsQUFHOEIsQUFLRixpQkFDbkIsRUFMZSxhQUNmIiwiZmlsZSI6IkQ6XFxyZWFjdFN0dWR5XFxOZXh0LUtvYS1HaXRIdWJcXG5leHQtZ2l0aHViXFxwYWdlc1xcZGV0YWlsXFxpc3N1ZXMuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IEF2YXRhciwgQnV0dG9uLCBTZWxlY3QgfSBmcm9tICdhbnRkJ1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcclxuaW1wb3J0IFdpdGhSZXBvQmFzaWMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9XaXRoUmVwb0Jhc2ljJ1xyXG5pbXBvcnQgTWFya2Rvd25SZW5kZXJlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL01hcmtkb3duUmVuZGVyZXInXHJcbmltcG9ydCBTZWFyY2hVc2VyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU2VhcmNoVXNlcidcclxuaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJy4uLy4uL2xpYi9hcGknXHJcbmltcG9ydCB7IGdldFRpbWVGcm9tTm93LCBnZW5EZXRhaWxDYWNoZUtleVN0cmF0ZSwgZ2VuRGV0YWlsQ2FjaGVLZXkgfSBmcm9tICcuLi8uLi9saWIvdXRpbCdcclxuaW1wb3J0IGluaXRDYWNoZSBmcm9tICcuLi8uLi9saWIvY2xpZW50LWNhY2hlJ1xyXG5cclxuY29uc3QgeyBPcHRpb24gfSA9IFNlbGVjdFxyXG5cclxuY29uc3QgeyBjYWNoZSwgdXNlQ2FjaGUgfSA9IGluaXRDYWNoZSh7XHJcbiAgZ2VuQ2FjaGVLZXlTdHJhdGU6IChjb250ZXh0KSA9PiB7XHJcbiAgICByZXR1cm4gZ2VuRGV0YWlsQ2FjaGVLZXlTdHJhdGUoY29udGV4dClcclxuICB9LFxyXG59KVxyXG5cclxuY29uc3QgSXNzdWVEZXRhaWwgPSAoeyBpc3N1ZSB9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG4gICAgICA8TWFya2Rvd25SZW5kZXJlciBjb250ZW50PXtpc3N1ZS5ib2R5fSAvPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFjdGlvbnNcIj5cclxuICAgICAgICA8QnV0dG9uIGhyZWY9e2lzc3VlLmh0bWxfdXJsfSB0YXJnZXQ9XCJfYmxhbmtcIj7miZPlvIBpc3N1ZeiuqOiuuumhtemdojwvQnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIC5yb290IHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICNmZWZlZmU7XHJcbiAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuYWN0aW9ucyB7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICB9XHJcbiAgICAgIGB9XHJcbiAgICAgIDwvc3R5bGU+XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbmNvbnN0IExhYmVsID0gKHsgbGFiZWwgfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8c3BhblxyXG4gICAgICAgIGNsYXNzTmFtZT1cImxhYmVsXCJcclxuICAgICAgPlxyXG4gICAgICAgIHtsYWJlbC5uYW1lfVxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAubGFiZWwge1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICAgICAgICAgIGhlaWdodDogMjBweDtcclxuICAgICAgICAgIHBhZGRpbmc6IC4xNWVtIDRweDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTVweDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTFweCAwIHJnYmEoMjcsMzEsMzUsLjEyKTtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMke2xhYmVsLmNvbG9yfTtcclxuICAgICAgICB9XHJcbiAgICAgIGB9XHJcbiAgICAgICAgPC9zdHlsZT5cclxuICAgICAgPC9zcGFuPlxyXG4gICAgPC8+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCBJc3N1ZUl0ZW0gPSAoeyBpc3N1ZSB9KSA9PiB7XHJcbiAgY29uc3QgW3Nob3dEZXRhaWwsIHNldFNob3dEZXRhaWxdID0gdXNlU3RhdGUoZmFsc2UpXHJcblxyXG4gIGNvbnN0IHRvZ2dsZVNob3dEZXRhaWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBzZXRTaG93RGV0YWlsKChzaG93KSA9PiAhc2hvdylcclxuICB9LCBbXSlcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImlzc3VlXCI+XHJcbiAgICAgICAgPEJ1dHRvblxyXG4gICAgICAgICAgb25DbGljaz17dG9nZ2xlU2hvd0RldGFpbH1cclxuICAgICAgICAgIGNsYXNzTmFtZT1cInZpZXctYnRuXCJcclxuICAgICAgICAgIHR5cGU9XCJwcmltYXJ5XCJcclxuICAgICAgICAgIHNpemU9XCJzbWFsbFwiXHJcbiAgICAgICAgPuafpeeci1xyXG4gICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXZhdGFyXCI+XHJcbiAgICAgICAgICA8QXZhdGFyIHNyYz17aXNzdWUudXNlci5hdmF0YXJfdXJsfSBzaGFwZT1cInNxdWFyZVwiIHNpemU9ezUwfSAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbi1pbmZvXCI+XHJcbiAgICAgICAgICA8aDY+XHJcbiAgICAgICAgICAgIDxzcGFuPntpc3N1ZS50aXRsZX08L3NwYW4+XHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBpc3N1ZS5sYWJlbHMubWFwKChsYWJlbCkgPT4gPExhYmVsIGxhYmVsPXtsYWJlbH0ga2V5PXtsYWJlbC5pZH0gLz4pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIDwvaDY+XHJcbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJzdWItaW5mb1wiPlxyXG4gICAgICAgICAgICA8c3Bhbj5VcGRhdGVkIGF0IHtnZXRUaW1lRnJvbU5vdyhpc3N1ZS51cGRhdGVkX2F0KX08L3NwYW4+XHJcbiAgICAgICAgICA8L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICB7c2hvd0RldGFpbCA/IDxJc3N1ZURldGFpbCBpc3N1ZT17aXNzdWV9IC8+IDogbnVsbH1cclxuICAgICAgPHN0eWxlIGpzeD5cclxuICAgICAgICB7YFxyXG4gICAgICAgICAgOmdsb2JhbCgudmlldy1idG4pIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICByaWdodDogMTBweDtcclxuICAgICAgICAgICAgdG9wOiAxMHB4XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLnJvb3QgKyAucm9vdCB7XHJcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5pc3N1ZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuaXNzdWU6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5tYWluLWluZm8gPiBoNiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5hdmF0YXIge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLnN1Yi1pbmZvIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuc3ViLWluZm8gPiBzcGFuICsgc3BhbiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICBgfVxyXG4gICAgICA8L3N0eWxlPlxyXG4gICAgPC9kaXY+XHJcblxyXG4gIClcclxufVxyXG5cclxuZnVuY3Rpb24gbWFrZVF1ZXJ5KGNyZWF0b3IsIHN0YXRlLCBsYWJlbHMpIHtcclxuICBjb25zdCBjcmVhdG9yU3RyID0gY3JlYXRvciA/IGBjcmVhdG9yPSR7Y3JlYXRvcn1gIDogJydcclxuICBjb25zdCBzdGF0ZVN0ciA9IHN0YXRlID8gYHN0YXRlPSR7c3RhdGV9YCA6ICcnXHJcbiAgbGV0IGxhYmVsU3RyID0gJydcclxuICBpZiAobGFiZWxzICYmIGxhYmVscy5sZW5ndGggPiAwKSB7XHJcbiAgICBsYWJlbFN0ciA9IGBsYWJlbHM9JHtsYWJlbHMuam9pbignLCcpfWBcclxuICB9XHJcblxyXG4gIGNvbnN0IGFyciA9IFtdXHJcblxyXG4gIGlmIChjcmVhdG9yU3RyKSB7XHJcbiAgICBhcnIucHVzaChjcmVhdG9yU3RyKVxyXG4gIH1cclxuICBpZiAoc3RhdGVTdHIpIHtcclxuICAgIGFyci5wdXNoKHN0YXRlU3RyKVxyXG4gIH1cclxuICBpZiAobGFiZWxTdHIpIHtcclxuICAgIGFyci5wdXNoKGxhYmVsU3RyKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGA/JHthcnIuam9pbignJicpfWBcclxufVxyXG5cclxuY29uc3QgSXNzdWVzID0gKHsgc2VydmljZXMgfSkgPT4ge1xyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXHJcbiAgdXNlQ2FjaGUoZ2VuRGV0YWlsQ2FjaGVLZXkocm91dGVyKSwgeyBzZXJ2aWNlcyB9KVxyXG5cclxuICBjb25zdCB7IGluaXRJc3N1ZXMsIGxhYmVscyB9ID0gc2VydmljZXNcclxuICBjb25zdCBbY3JlYXRvciwgc2V0Q3JlYXRvcl0gPSB1c2VTdGF0ZSgpXHJcbiAgY29uc3QgW2lzc3VlU3RhdGUsIHNldElzc3VlU3RhdGVdID0gdXNlU3RhdGUoKVxyXG4gIGNvbnN0IFtzZWxlY3RlZExhYmVscywgc2V0U2VsZWN0ZWRMYWJlbHNdID0gdXNlU3RhdGUoW10pXHJcbiAgY29uc3QgW2lzc3Vlcywgc2V0SXNzdWVzXSA9IHVzZVN0YXRlKGluaXRJc3N1ZXMpXHJcbiAgY29uc3QgW2ZldGNoaW5nLCBzZXRGZXRjaGluZ10gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBjb25zdCBoYW5kbGVMYWJlbHNDaGFuZ2UgPSAoc2VsZWN0ZWQpID0+IHtcclxuICAgIHNldFNlbGVjdGVkTGFiZWxzKHNlbGVjdGVkKVxyXG4gIH1cclxuXHJcbiAgY29uc3QgeyBvd25lciwgbmFtZSB9ID0gcm91dGVyLnF1ZXJ5XHJcbiAgY29uc3QgaGFuZGxlU2VhcmNoID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgc2V0RmV0Y2hpbmcodHJ1ZSlcclxuICAgIGNvbnN0IHsgZGF0YTogcmVzdWx0SXNzdWVzIH0gPSBhd2FpdCByZXF1ZXN0KHtcclxuICAgICAgdXJsOiBgL3JlcG9zLyR7b3duZXJ9LyR7bmFtZX0vaXNzdWVzJHttYWtlUXVlcnkoY3JlYXRvciwgaXNzdWVTdGF0ZSwgc2VsZWN0ZWRMYWJlbHMpfWAsXHJcbiAgICB9KVxyXG4gICAgc2V0SXNzdWVzKHJlc3VsdElzc3VlcylcclxuICAgIHNldEZldGNoaW5nKGZhbHNlKVxyXG4gIH1cclxuXHJcbiAgY29uc3Qgc2VsZWN0Q29tbWVuU3R5bGUgPSB7XHJcbiAgICBhbGlnblNlbGY6ICdmbGV4LXN0YXJ0JyxcclxuICAgIHdpZHRoOiAyMDAsXHJcbiAgICBtYXJnaW5MZWZ0OiAyMCxcclxuICB9XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlYXJjaFwiPlxyXG4gICAgICAgIDxTZWFyY2hVc2VyXHJcbiAgICAgICAgICBzdHlsZT17c2VsZWN0Q29tbWVuU3R5bGV9XHJcbiAgICAgICAgICB2YWx1ZT17Y3JlYXRvcn1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtzZXRDcmVhdG9yfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPFNlbGVjdFxyXG4gICAgICAgICAgYWxsb3dDbGVhclxyXG4gICAgICAgICAgb25DaGFuZ2U9e3NldElzc3VlU3RhdGV9XHJcbiAgICAgICAgICB2YWx1ZT17aXNzdWVTdGF0ZX1cclxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwi54q25oCBXCJcclxuICAgICAgICAgIHN0eWxlPXtzZWxlY3RDb21tZW5TdHlsZX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8T3B0aW9uIHZhbHVlPVwiYWxsXCI+5YWo6YOoPC9PcHRpb24+XHJcbiAgICAgICAgICA8T3B0aW9uIHZhbHVlPVwib3BlblwiPm9wZW48L09wdGlvbj5cclxuICAgICAgICAgIDxPcHRpb24gdmFsdWU9XCJjbG9zZWRcIj5jbG9zZWQ8L09wdGlvbj5cclxuICAgICAgICA8L1NlbGVjdD5cclxuXHJcbiAgICAgICAgPFNlbGVjdFxyXG4gICAgICAgICAgYWxsb3dDbGVhclxyXG4gICAgICAgICAgbW9kZT1cIm11bHRpcGxlXCJcclxuICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVMYWJlbHNDaGFuZ2V9XHJcbiAgICAgICAgICB2YWx1ZT17c2VsZWN0ZWRMYWJlbHN9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIkxhYmVsXCJcclxuICAgICAgICAgIHN0eWxlPXt7IGZsZXhHcm93OiAxLCB3aWR0aDogMjAwLCBtYXJnaW46ICcwIDIwcHgnIH19XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAge2xhYmVscy5tYXAoKGxhYmVsKSA9PiAoXHJcbiAgICAgICAgICAgIDxPcHRpb24gdmFsdWU9e2xhYmVsLmlkfSBrZXk9e2xhYmVsLmlkfT5cclxuICAgICAgICAgICAgICB7bGFiZWwubmFtZX1cclxuICAgICAgICAgICAgPC9PcHRpb24+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgICA8L1NlbGVjdD5cclxuICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICBsb2FkaW5nPXtmZXRjaGluZ31cclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVNlYXJjaH1cclxuICAgICAgICAgIHNpemU9XCJzbWFsbFwiXHJcbiAgICAgICAgICB0eXBlPVwicHJpbWFyeVwiXHJcbiAgICAgICAgICBzdHlsZT17eyBtYXJnaW5SaWdodDogMTEgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICDmkJzntKJcclxuICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaXNzdWVzXCI+XHJcbiAgICAgICAge2lzc3Vlcy5tYXAoKGlzc3VlKSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gPElzc3VlSXRlbSBrZXk9e2lzc3VlLmlkfSBpc3N1ZT17aXNzdWV9IC8+XHJcbiAgICAgICAgfSl9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgIHtgXHJcbiAgICAgICAgICAuaXNzdWVzIHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VlZTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5zZWFyY2gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGB9XHJcbiAgICAgIDwvc3R5bGU+XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbklzc3Vlcy5nZXRJbml0aWFsUHJvcHMgPSBjYWNoZShhc3luYyAoeyBjdHggfSkgPT4ge1xyXG4gIGNvbnN0IHsgb3duZXIsIG5hbWUgfSA9IGN0eC5xdWVyeVxyXG4gIC8vIGNvbnN0IFtcclxuICAvLyAgIC8vIHsgZGF0YTogaW5pdElzc3VlcyB9LFxyXG4gIC8vICAgeyBkYXRhOiBsYWJlbHMgfSxcclxuICAvLyBdID0gYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgLy8gICBbXHJcbiAgLy8gICAgIC8vIHJlcXVlc3QoXHJcbiAgLy8gICAgIC8vICAge1xyXG4gIC8vICAgICAvLyAgICAgdXJsOiBgL3JlcG9zLyR7b3duZXJ9LyR7bmFtZX0vaXNzdWVzYCxcclxuICAvLyAgICAgLy8gICB9LFxyXG4gIC8vICAgICAvLyAgIGN0eC5yZXEsXHJcbiAgLy8gICAgIC8vICAgY3R4LnJlcyxcclxuICAvLyAgICAgLy8gKSxcclxuICAvLyAgICAgcmVxdWVzdChcclxuICAvLyAgICAgICB7XHJcbiAgLy8gICAgICAgICB1cmw6IGAvcmVwb3MvJHtvd25lcn0vJHtuYW1lfS9sYWJlbHNgLFxyXG4gIC8vICAgICAgIH0sXHJcbiAgLy8gICAgICAgY3R4LnJlcSxcclxuICAvLyAgICAgICBjdHgucmVzLFxyXG4gIC8vICAgICApLFxyXG4gIC8vICAgXSxcclxuICAvLyApXHJcblxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2VydmljZXM6IHtcclxuICAgICAgaW5pdElzc3VlczpbXSxcclxuICAgICAgbGFiZWxzOltdLFxyXG4gICAgfSxcclxuICB9XHJcbn0pXHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaXRoUmVwb0Jhc2ljKElzc3VlcywgJ2lzc3VlcycpXHJcbiJdfQ== */\\n/*@ sourceURL=D:\\\\reactStudy\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\detail\\\\issues.jsx */\"));\n};\n\nvar Label = function Label(_ref2) {\n  var label = _ref2.label;\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"1901604367\", [label.color]]]) + \" \" + \"label\"\n  }, label.name, __jsx(_JSXStyle, {\n    id: \"1901604367\",\n    dynamic: [label.color]\n  }, \".label.__jsx-style-dynamic-selector{margin-left:8px;height:20px;padding:.15em 4px;font-size:12px;font-weight:600;line-height:15px;border-radius:2px;box-shadow:inset 0 -1px 0 rgba(27,31,35,.12);background-color:#\".concat(label.color, \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\reactStudy\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\detail\\\\issues.jsx */\"))));\n};\n\nvar IssueItem = function IssueItem(_ref3) {\n  var issue = _ref3.issue;\n\n  var _useState = useState(false),\n      showDetail = _useState[0],\n      setShowDetail = _useState[1];\n\n  var toggleShowDetail = useCallback(function () {\n    setShowDetail(function (show) {\n      return !show;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"jsx-1792689352\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1792689352\" + \" \" + \"issue\"\n  }, __jsx(_Button, {\n    onClick: toggleShowDetail,\n    className: \"view-btn\",\n    type: \"primary\",\n    size: \"small\"\n  }, \"\\u67E5\\u770B\"), __jsx(\"div\", {\n    className: \"jsx-1792689352\" + \" \" + \"avatar\"\n  }, __jsx(_Avatar, {\n    src: issue.user.avatar_url,\n    shape: \"square\",\n    size: 50\n  })), __jsx(\"div\", {\n    className: \"jsx-1792689352\" + \" \" + \"main-info\"\n  }, __jsx(\"h6\", {\n    className: \"jsx-1792689352\"\n  }, __jsx(\"span\", {\n    className: \"jsx-1792689352\"\n  }, issue.title), issue.labels.map(function (label) {\n    return __jsx(Label, {\n      label: label,\n      key: label.id\n    });\n  })), __jsx(\"p\", {\n    className: \"jsx-1792689352\" + \" \" + \"sub-info\"\n  }, __jsx(\"span\", {\n    className: \"jsx-1792689352\"\n  }, \"Updated at \", getTimeFromNow(issue.updated_at))))), showDetail ? __jsx(IssueDetail, {\n    issue: issue\n  }) : null, __jsx(_JSXStyle, {\n    id: \"1792689352\"\n  }, \".view-btn{position:absolute;right:10px;top:10px;}.root.jsx-1792689352+.root.jsx-1792689352{border-top:1px solid #eee;}.issue.jsx-1792689352{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-1792689352:hover{background:#fafafa;}.main-info.jsx-1792689352>h6.jsx-1792689352{padding-right:40px;font-size:16px;word-break:break-all;}.avatar.jsx-1792689352{margin-right:20px;}.sub-info.jsx-1792689352{margin-bottom:0;}.sub-info.jsx-1792689352>span.jsx-1792689352+span.jsx-1792689352{display:inline-block;margin-left:20px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\reactStudy\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\detail\\\\issues.jsx */\"));\n};\n\nfunction makeQuery(creator, state, labels) {\n  var creatorStr = creator ? \"creator=\".concat(creator) : '';\n  var stateStr = state ? \"state=\".concat(state) : '';\n  var labelStr = '';\n\n  if (labels && labels.length > 0) {\n    labelStr = \"labels=\".concat(labels.join(','));\n  }\n\n  var arr = [];\n\n  if (creatorStr) {\n    arr.push(creatorStr);\n  }\n\n  if (stateStr) {\n    arr.push(stateStr);\n  }\n\n  if (labelStr) {\n    arr.push(labelStr);\n  }\n\n  return \"?\".concat(arr.join('&'));\n}\n\nvar Issues = function Issues(_ref4) {\n  var services = _ref4.services;\n  var router = useRouter();\n  useCache(genDetailCacheKey(router), {\n    services: services\n  });\n  var initIssues = services.initIssues,\n      labels = services.labels;\n\n  var _useState2 = useState(),\n      creator = _useState2[0],\n      setCreator = _useState2[1];\n\n  var _useState3 = useState(),\n      issueState = _useState3[0],\n      setIssueState = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedLabels = _useState4[0],\n      setSelectedLabels = _useState4[1];\n\n  var _useState5 = useState(initIssues),\n      issues = _useState5[0],\n      setIssues = _useState5[1];\n\n  var _useState6 = useState(false),\n      fetching = _useState6[0],\n      setFetching = _useState6[1];\n\n  var handleLabelsChange = function handleLabelsChange(selected) {\n    setSelectedLabels(selected);\n  };\n\n  var _router$query = router.query,\n      owner = _router$query.owner,\n      name = _router$query.name;\n\n  var handleSearch =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref6, resultIssues;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setFetching(true);\n              _context.next = 3;\n              return request({\n                url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\").concat(makeQuery(creator, issueState, selectedLabels))\n              });\n\n            case 3:\n              _ref6 = _context.sent;\n              resultIssues = _ref6.data;\n              setIssues(resultIssues);\n              setFetching(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSearch() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var selectCommenStyle = {\n    alignSelf: 'flex-start',\n    width: 200,\n    marginLeft: 20\n  };\n  return __jsx(\"div\", {\n    className: \"jsx-33133419\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-33133419\" + \" \" + \"search\"\n  }, __jsx(SearchUser, {\n    style: selectCommenStyle,\n    value: creator,\n    onChange: setCreator\n  }), __jsx(_Select, {\n    allowClear: true,\n    onChange: setIssueState,\n    value: issueState,\n    placeholder: \"\\u72B6\\u6001\",\n    style: selectCommenStyle\n  }, __jsx(Option, {\n    value: \"all\"\n  }, \"\\u5168\\u90E8\"), __jsx(Option, {\n    value: \"open\"\n  }, \"open\"), __jsx(Option, {\n    value: \"closed\"\n  }, \"closed\")), __jsx(_Select, {\n    allowClear: true,\n    mode: \"multiple\",\n    onChange: handleLabelsChange,\n    value: selectedLabels,\n    placeholder: \"Label\",\n    style: {\n      flexGrow: 1,\n      width: 200,\n      margin: '0 20px'\n    }\n  }, labels.map(function (label) {\n    return __jsx(Option, {\n      value: label.id,\n      key: label.id\n    }, label.name);\n  })), __jsx(_Button, {\n    loading: fetching,\n    onClick: handleSearch,\n    size: \"small\",\n    type: \"primary\",\n    style: {\n      marginRight: 11\n    }\n  }, \"\\u641C\\u7D22\")), __jsx(\"div\", {\n    className: \"jsx-33133419\" + \" \" + \"issues\"\n  }, issues.map(function (issue) {\n    return __jsx(IssueItem, {\n      key: issue.id,\n      issue: issue\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"33133419\"\n  }, \".issues.jsx-33133419{border:1px solid #eee;border-radius:5px;margin-bottom:20px;margin-top:20px;}.search.jsx-33133419{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\reactStudy\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\detail\\\\issues.jsx */\"));\n};\n\nIssues.getInitialProps = cache(\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref7) {\n    var ctx, _ctx$query, owner, name;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ctx = _ref7.ctx;\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name; // const [\n            //   // { data: initIssues },\n            //   { data: labels },\n            // ] = await Promise.all(\n            //   [\n            //     // request(\n            //     //   {\n            //     //     url: `/repos/${owner}/${name}/issues`,\n            //     //   },\n            //     //   ctx.req,\n            //     //   ctx.res,\n            //     // ),\n            //     request(\n            //       {\n            //         url: `/repos/${owner}/${name}/labels`,\n            //       },\n            //       ctx.req,\n            //       ctx.res,\n            //     ),\n            //   ],\n            // )\n\n            return _context2.abrupt(\"return\", {\n              services: {\n                initIssues: [],\n                labels: []\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref8.apply(this, arguments);\n  };\n}());\nexport default WithRepoBasic(Issues, 'issues');","map":{"version":3,"sources":["D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\issues.jsx"],"names":["useState","useCallback","useRouter","WithRepoBasic","MarkdownRenderer","SearchUser","request","getTimeFromNow","genDetailCacheKeyStrate","genDetailCacheKey","initCache","Option","genCacheKeyStrate","context","cache","useCache","IssueDetail","issue","body","html_url","Label","label","color","name","IssueItem","showDetail","setShowDetail","toggleShowDetail","show","user","avatar_url","title","labels","map","id","updated_at","makeQuery","creator","state","creatorStr","stateStr","labelStr","length","join","arr","push","Issues","services","router","initIssues","setCreator","issueState","setIssueState","selectedLabels","setSelectedLabels","issues","setIssues","fetching","setFetching","handleLabelsChange","selected","query","owner","handleSearch","url","resultIssues","data","selectCommenStyle","alignSelf","width","marginLeft","flexGrow","margin","marginRight","getInitialProps","ctx"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,cAAT,EAAyBC,uBAAzB,EAAkDC,iBAAlD,QAA2E,gBAA3E;AACA,OAAOC,SAAP,MAAsB,wBAAtB;IAEQC,M,WAAAA,M;;iBAEoBD,SAAS,CAAC;AACpCE,EAAAA,iBAAiB,EAAE,2BAACC,OAAD,EAAa;AAC9B,WAAOL,uBAAuB,CAACK,OAAD,CAA9B;AACD;AAHmC,CAAD,C;IAA7BC,K,cAAAA,K;IAAOC,Q,cAAAA,Q;;AAMf,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjC,SACE;AAAA,wCAAe;AAAf,KACE,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEA,KAAK,CAACC;AAAjC,IADF,EAEE;AAAA,wCAAe;AAAf,KACE;AAAQ,IAAA,IAAI,EAAED,KAAK,CAACE,QAApB;AAA8B,IAAA,MAAM,EAAC;AAArC,iDADF,CAFF;AAAA;AAAA,omWADF;AAmBD,CApBD;;AAsBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,QAAe;AAAA,MAAZC,KAAY,SAAZA,KAAY;AAC3B,SACE,4BACE;AAAA,kDAcyBA,KAAK,CAACC,KAd/B,aACY;AADZ,KAGGD,KAAK,CAACE,IAHT;AAAA;AAAA,cAcyBF,KAAK,CAACC,KAd/B;AAAA,kOAcyBD,KAAK,CAACC,KAd/B,4iWADF,CADF;AAuBD,CAxBD;;AA0BA,IAAME,SAAS,GAAG,SAAZA,SAAY,QAAe;AAAA,MAAZP,KAAY,SAAZA,KAAY;;AAAA,kBACKjB,QAAQ,CAAC,KAAD,CADb;AAAA,MACxByB,UADwB;AAAA,MACZC,aADY;;AAG/B,MAAMC,gBAAgB,GAAG1B,WAAW,CAAC,YAAM;AACzCyB,IAAAA,aAAa,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAb;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,SACE;AAAA,wCAAe;AAAf,KACE;AAAA,wCAAe;AAAf,KACE;AACE,IAAA,OAAO,EAAED,gBADX;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,IAAI,EAAC;AAJP,oBADF,EAQE;AAAA,wCAAe;AAAf,KACE;AAAQ,IAAA,GAAG,EAAEV,KAAK,CAACY,IAAN,CAAWC,UAAxB;AAAoC,IAAA,KAAK,EAAC,QAA1C;AAAmD,IAAA,IAAI,EAAE;AAAzD,IADF,CARF,EAWE;AAAA,wCAAe;AAAf,KACE;AAAA;AAAA,KACE;AAAA;AAAA,KAAOb,KAAK,CAACc,KAAb,CADF,EAGId,KAAK,CAACe,MAAN,CAAaC,GAAb,CAAiB,UAACZ,KAAD;AAAA,WAAW,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAqB,MAAA,GAAG,EAAEA,KAAK,CAACa;AAAhC,MAAX;AAAA,GAAjB,CAHJ,CADF,EAOE;AAAA,wCAAa;AAAb,KACE;AAAA;AAAA,oBAAkB3B,cAAc,CAACU,KAAK,CAACkB,UAAP,CAAhC,CADF,CAPF,CAXF,CADF,EAwBGV,UAAU,GAAG,MAAC,WAAD;AAAa,IAAA,KAAK,EAAER;AAApB,IAAH,GAAmC,IAxBhD;AAAA;AAAA,yuXADF;AAwED,CA/ED;;AAiFA,SAASmB,SAAT,CAAmBC,OAAnB,EAA4BC,KAA5B,EAAmCN,MAAnC,EAA2C;AACzC,MAAMO,UAAU,GAAGF,OAAO,qBAAcA,OAAd,IAA0B,EAApD;AACA,MAAMG,QAAQ,GAAGF,KAAK,mBAAYA,KAAZ,IAAsB,EAA5C;AACA,MAAIG,QAAQ,GAAG,EAAf;;AACA,MAAIT,MAAM,IAAIA,MAAM,CAACU,MAAP,GAAgB,CAA9B,EAAiC;AAC/BD,IAAAA,QAAQ,oBAAaT,MAAM,CAACW,IAAP,CAAY,GAAZ,CAAb,CAAR;AACD;;AAED,MAAMC,GAAG,GAAG,EAAZ;;AAEA,MAAIL,UAAJ,EAAgB;AACdK,IAAAA,GAAG,CAACC,IAAJ,CAASN,UAAT;AACD;;AACD,MAAIC,QAAJ,EAAc;AACZI,IAAAA,GAAG,CAACC,IAAJ,CAASL,QAAT;AACD;;AACD,MAAIC,QAAJ,EAAc;AACZG,IAAAA,GAAG,CAACC,IAAJ,CAASJ,QAAT;AACD;;AAED,oBAAWG,GAAG,CAACD,IAAJ,CAAS,GAAT,CAAX;AACD;;AAED,IAAMG,MAAM,GAAG,SAATA,MAAS,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAC/B,MAAMC,MAAM,GAAG9C,SAAS,EAAxB;AACAa,EAAAA,QAAQ,CAACN,iBAAiB,CAACuC,MAAD,CAAlB,EAA4B;AAAED,IAAAA,QAAQ,EAARA;AAAF,GAA5B,CAAR;AAF+B,MAIvBE,UAJuB,GAIAF,QAJA,CAIvBE,UAJuB;AAAA,MAIXjB,MAJW,GAIAe,QAJA,CAIXf,MAJW;;AAAA,mBAKDhC,QAAQ,EALP;AAAA,MAKxBqC,OALwB;AAAA,MAKfa,UALe;;AAAA,mBAMKlD,QAAQ,EANb;AAAA,MAMxBmD,UANwB;AAAA,MAMZC,aANY;;AAAA,mBAOapD,QAAQ,CAAC,EAAD,CAPrB;AAAA,MAOxBqD,cAPwB;AAAA,MAORC,iBAPQ;;AAAA,mBAQHtD,QAAQ,CAACiD,UAAD,CARL;AAAA,MAQxBM,MARwB;AAAA,MAQhBC,SARgB;;AAAA,mBASCxD,QAAQ,CAAC,KAAD,CATT;AAAA,MASxByD,QATwB;AAAA,MASdC,WATc;;AAU/B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvCN,IAAAA,iBAAiB,CAACM,QAAD,CAAjB;AACD,GAFD;;AAV+B,sBAcPZ,MAAM,CAACa,KAdA;AAAA,MAcvBC,KAduB,iBAcvBA,KAduB;AAAA,MAchBvC,IAdgB,iBAchBA,IAdgB;;AAe/B,MAAMwC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBL,cAAAA,WAAW,CAAC,IAAD,CAAX;AADmB;AAAA,qBAEkBpD,OAAO,CAAC;AAC3C0D,gBAAAA,GAAG,mBAAYF,KAAZ,cAAqBvC,IAArB,oBAAmCa,SAAS,CAACC,OAAD,EAAUc,UAAV,EAAsBE,cAAtB,CAA5C;AADwC,eAAD,CAFzB;;AAAA;AAAA;AAELY,cAAAA,YAFK,SAEXC,IAFW;AAKnBV,cAAAA,SAAS,CAACS,YAAD,CAAT;AACAP,cAAAA,WAAW,CAAC,KAAD,CAAX;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZK,YAAY;AAAA;AAAA;AAAA,KAAlB;;AASA,MAAMI,iBAAiB,GAAG;AACxBC,IAAAA,SAAS,EAAE,YADa;AAExBC,IAAAA,KAAK,EAAE,GAFiB;AAGxBC,IAAAA,UAAU,EAAE;AAHY,GAA1B;AAKA,SACE;AAAA,sCAAe;AAAf,KACE;AAAA,sCAAe;AAAf,KACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAEH,iBADT;AAEE,IAAA,KAAK,EAAE9B,OAFT;AAGE,IAAA,QAAQ,EAAEa;AAHZ,IADF,EAME;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,QAAQ,EAAEE,aAFZ;AAGE,IAAA,KAAK,EAAED,UAHT;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,KAAK,EAAEgB;AALT,KAOE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,oBAPF,EAQE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,YARF,EASE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,cATF,CANF,EAkBE;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAER,kBAHZ;AAIE,IAAA,KAAK,EAAEN,cAJT;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,KAAK,EAAE;AAAEkB,MAAAA,QAAQ,EAAE,CAAZ;AAAeF,MAAAA,KAAK,EAAE,GAAtB;AAA2BG,MAAAA,MAAM,EAAE;AAAnC;AANT,KAQGxC,MAAM,CAACC,GAAP,CAAW,UAACZ,KAAD;AAAA,WACV,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,KAAK,CAACa,EAArB;AAAyB,MAAA,GAAG,EAAEb,KAAK,CAACa;AAApC,OACGb,KAAK,CAACE,IADT,CADU;AAAA,GAAX,CARH,CAlBF,EAgCE;AACE,IAAA,OAAO,EAAEkC,QADX;AAEE,IAAA,OAAO,EAAEM,YAFX;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,KAAK,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf;AALT,oBAhCF,CADF,EA2CE;AAAA,sCAAe;AAAf,KACGlB,MAAM,CAACtB,GAAP,CAAW,UAAChB,KAAD,EAAW;AACrB,WAAO,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACiB,EAAtB;AAA0B,MAAA,KAAK,EAAEjB;AAAjC,MAAP;AACD,GAFA,CADH,CA3CF;AAAA;AAAA,szWADF;AAkED,CA/FD;;AAiGA6B,MAAM,CAAC4B,eAAP,GAAyB5D,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAS6D,YAAAA,GAAT,SAASA,GAAT;AAAA,yBACLA,GAAG,CAACd,KADC,EACrBC,KADqB,cACrBA,KADqB,EACdvC,IADc,cACdA,IADc,EAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtB6B,8CAyBtB;AACLwB,cAAAA,QAAQ,EAAE;AACRE,gBAAAA,UAAU,EAAC,EADH;AAERjB,gBAAAA,MAAM,EAAC;AAFC;AADL,aAzBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA9B;AAiCA,eAAe7B,aAAa,CAAC2C,MAAD,EAAS,QAAT,CAA5B","sourcesContent":["import { useState, useCallback } from 'react'\r\nimport { Avatar, Button, Select } from 'antd'\r\nimport { useRouter } from 'next/router'\r\nimport WithRepoBasic from '../../components/WithRepoBasic'\r\nimport MarkdownRenderer from '../../components/MarkdownRenderer'\r\nimport SearchUser from '../../components/SearchUser'\r\nimport { request } from '../../lib/api'\r\nimport { getTimeFromNow, genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util'\r\nimport initCache from '../../lib/client-cache'\r\n\r\nconst { Option } = Select\r\n\r\nconst { cache, useCache } = initCache({\r\n  genCacheKeyStrate: (context) => {\r\n    return genDetailCacheKeyStrate(context)\r\n  },\r\n})\r\n\r\nconst IssueDetail = ({ issue }) => {\r\n  return (\r\n    <div className=\"root\">\r\n      <MarkdownRenderer content={issue.body} />\r\n      <div className=\"actions\">\r\n        <Button href={issue.html_url} target=\"_blank\">打开issue讨论页面</Button>\r\n      </div>\r\n      <style jsx>{`\r\n        .root {\r\n          background: #fefefe;\r\n          padding: 20px;\r\n        }\r\n        \r\n        .actions {\r\n          text-align: right;\r\n        }\r\n      `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Label = ({ label }) => {\r\n  return (\r\n    <>\r\n      <span\r\n        className=\"label\"\r\n      >\r\n        {label.name}\r\n        <style jsx>{`\r\n        .label {\r\n          margin-left: 8px;\r\n          height: 20px;\r\n          padding: .15em 4px;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          line-height: 15px;\r\n          border-radius: 2px;\r\n          box-shadow: inset 0 -1px 0 rgba(27,31,35,.12);\r\n          background-color: #${label.color};\r\n        }\r\n      `}\r\n        </style>\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nconst IssueItem = ({ issue }) => {\r\n  const [showDetail, setShowDetail] = useState(false)\r\n\r\n  const toggleShowDetail = useCallback(() => {\r\n    setShowDetail((show) => !show)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"issue\">\r\n        <Button\r\n          onClick={toggleShowDetail}\r\n          className=\"view-btn\"\r\n          type=\"primary\"\r\n          size=\"small\"\r\n        >查看\r\n        </Button>\r\n        <div className=\"avatar\">\r\n          <Avatar src={issue.user.avatar_url} shape=\"square\" size={50} />\r\n        </div>\r\n        <div className=\"main-info\">\r\n          <h6>\r\n            <span>{issue.title}</span>\r\n            {\r\n              issue.labels.map((label) => <Label label={label} key={label.id} />)\r\n            }\r\n          </h6>\r\n          <p className=\"sub-info\">\r\n            <span>Updated at {getTimeFromNow(issue.updated_at)}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {showDetail ? <IssueDetail issue={issue} /> : null}\r\n      <style jsx>\r\n        {`\r\n          :global(.view-btn) {\r\n            position: absolute;\r\n            right: 10px;\r\n            top: 10px\r\n          }\r\n\r\n          .root + .root {\r\n            border-top: 1px solid #eee;\r\n          }\r\n\r\n          .issue {\r\n            display: flex;\r\n            position: relative;\r\n            padding: 10px;\r\n          }\r\n\r\n          .issue:hover {\r\n            background: #fafafa;\r\n          }\r\n\r\n          .main-info > h6 {\r\n            padding-right: 40px;\r\n            font-size: 16px;\r\n            word-break: break-all;\r\n          }\r\n\r\n          .avatar {\r\n            margin-right: 20px;\r\n          }\r\n\r\n          .sub-info {\r\n            margin-bottom: 0;\r\n          }\r\n\r\n          .sub-info > span + span {\r\n            display: inline-block;\r\n            margin-left: 20px;\r\n            font-size: 12px;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction makeQuery(creator, state, labels) {\r\n  const creatorStr = creator ? `creator=${creator}` : ''\r\n  const stateStr = state ? `state=${state}` : ''\r\n  let labelStr = ''\r\n  if (labels && labels.length > 0) {\r\n    labelStr = `labels=${labels.join(',')}`\r\n  }\r\n\r\n  const arr = []\r\n\r\n  if (creatorStr) {\r\n    arr.push(creatorStr)\r\n  }\r\n  if (stateStr) {\r\n    arr.push(stateStr)\r\n  }\r\n  if (labelStr) {\r\n    arr.push(labelStr)\r\n  }\r\n\r\n  return `?${arr.join('&')}`\r\n}\r\n\r\nconst Issues = ({ services }) => {\r\n  const router = useRouter()\r\n  useCache(genDetailCacheKey(router), { services })\r\n\r\n  const { initIssues, labels } = services\r\n  const [creator, setCreator] = useState()\r\n  const [issueState, setIssueState] = useState()\r\n  const [selectedLabels, setSelectedLabels] = useState([])\r\n  const [issues, setIssues] = useState(initIssues)\r\n  const [fetching, setFetching] = useState(false)\r\n  const handleLabelsChange = (selected) => {\r\n    setSelectedLabels(selected)\r\n  }\r\n\r\n  const { owner, name } = router.query\r\n  const handleSearch = async () => {\r\n    setFetching(true)\r\n    const { data: resultIssues } = await request({\r\n      url: `/repos/${owner}/${name}/issues${makeQuery(creator, issueState, selectedLabels)}`,\r\n    })\r\n    setIssues(resultIssues)\r\n    setFetching(false)\r\n  }\r\n\r\n  const selectCommenStyle = {\r\n    alignSelf: 'flex-start',\r\n    width: 200,\r\n    marginLeft: 20,\r\n  }\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"search\">\r\n        <SearchUser\r\n          style={selectCommenStyle}\r\n          value={creator}\r\n          onChange={setCreator}\r\n        />\r\n        <Select\r\n          allowClear\r\n          onChange={setIssueState}\r\n          value={issueState}\r\n          placeholder=\"状态\"\r\n          style={selectCommenStyle}\r\n        >\r\n          <Option value=\"all\">全部</Option>\r\n          <Option value=\"open\">open</Option>\r\n          <Option value=\"closed\">closed</Option>\r\n        </Select>\r\n\r\n        <Select\r\n          allowClear\r\n          mode=\"multiple\"\r\n          onChange={handleLabelsChange}\r\n          value={selectedLabels}\r\n          placeholder=\"Label\"\r\n          style={{ flexGrow: 1, width: 200, margin: '0 20px' }}\r\n        >\r\n          {labels.map((label) => (\r\n            <Option value={label.id} key={label.id}>\r\n              {label.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <Button\r\n          loading={fetching}\r\n          onClick={handleSearch}\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          style={{ marginRight: 11 }}\r\n        >\r\n          搜索\r\n        </Button>\r\n      </div>\r\n      <div className=\"issues\">\r\n        {issues.map((issue) => {\r\n          return <IssueItem key={issue.id} issue={issue} />\r\n        })}\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          .issues {\r\n            border: 1px solid #eee;\r\n            border-radius: 5px;\r\n            margin-bottom: 20px;\r\n            margin-top: 20px;\r\n          }\r\n\r\n          .search {\r\n            display: flex;\r\n            align-items: center;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\nIssues.getInitialProps = cache(async ({ ctx }) => {\r\n  const { owner, name } = ctx.query\r\n  // const [\r\n  //   // { data: initIssues },\r\n  //   { data: labels },\r\n  // ] = await Promise.all(\r\n  //   [\r\n  //     // request(\r\n  //     //   {\r\n  //     //     url: `/repos/${owner}/${name}/issues`,\r\n  //     //   },\r\n  //     //   ctx.req,\r\n  //     //   ctx.res,\r\n  //     // ),\r\n  //     request(\r\n  //       {\r\n  //         url: `/repos/${owner}/${name}/labels`,\r\n  //       },\r\n  //       ctx.req,\r\n  //       ctx.res,\r\n  //     ),\r\n  //   ],\r\n  // )\r\n\r\n\r\n  return {\r\n    services: {\r\n      initIssues:[],\r\n      labels:[],\r\n    },\r\n  }\r\n})\r\n\r\nexport default WithRepoBasic(Issues, 'issues')\r\n"]},"metadata":{},"sourceType":"module"}