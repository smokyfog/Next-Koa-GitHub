{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport 'github-markdown-css';\nimport WithRepoBasic from '../../components/WithRepoBasic';\nimport { request } from '../../lib/api';\nimport initCache from '../../lib/client-cache';\nimport { genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util';\nimport MarkdownRenderer from '../../components/MarkdownRenderer';\n\nvar _initCache = initCache({\n  genCacheKeyStrate: function genCacheKeyStrate(context) {\n    return genDetailCacheKeyStrate(context);\n  }\n}),\n    cache = _initCache.cache,\n    useCache = _initCache.useCache;\n\nvar Detail = function Detail(_ref) {\n  var readme = _ref.readme;\n  var router = useRouter();\n  useCache(genDetailCacheKey(router), {\n    readme: readme\n  });\n  return __jsx(MarkdownRenderer, {\n    isBase64: true,\n    content: readme.content\n  });\n};\n\nDetail.getInitialProps = cache(\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ref2$ctx, _ref2$ctx$query, owner, name, req, res, _ref4, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2$ctx = _ref2.ctx, _ref2$ctx$query = _ref2$ctx.query, owner = _ref2$ctx$query.owner, name = _ref2$ctx$query.name, req = _ref2$ctx.req, res = _ref2$ctx.res;\n            _context.next = 3;\n            return request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, req, res);\n\n          case 3:\n            _ref4 = _context.sent;\n            data = _ref4.data;\n            return _context.abrupt(\"return\", {\n              readme: data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexport default WithRepoBasic(Detail);","map":{"version":3,"sources":["D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\index.jsx"],"names":["useRouter","WithRepoBasic","request","initCache","genDetailCacheKeyStrate","genDetailCacheKey","MarkdownRenderer","genCacheKeyStrate","context","cache","useCache","Detail","readme","router","content","getInitialProps","ctx","query","owner","name","req","res","url","data"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,uBAAT,EAAkCC,iBAAlC,QAA2D,gBAA3D;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;;iBAE4BH,SAAS,CAAC;AACpCI,EAAAA,iBAAiB,EAAE,2BAACC,OAAD,EAAa;AAC9B,WAAOJ,uBAAuB,CAACI,OAAD,CAA9B;AACD;AAHmC,CAAD,C;IAA7BC,K,cAAAA,K;IAAOC,Q,cAAAA,Q;;AAKf,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC7B,MAAMC,MAAM,GAAGb,SAAS,EAAxB;AACAU,EAAAA,QAAQ,CAACL,iBAAiB,CAACQ,MAAD,CAAlB,EAA4B;AAClCD,IAAAA,MAAM,EAANA;AADkC,GAA5B,CAAR;AAIA,SACE,MAAC,gBAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAEA,MAAM,CAACE;AAFlB,IADF;AAMD,CAZD;;AAcAH,MAAM,CAACI,eAAP,GAAyBN,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAC7BO,GAD6B,8BAE3BC,KAF2B,EAGzBC,KAHyB,mBAGzBA,KAHyB,EAIzBC,IAJyB,mBAIzBA,IAJyB,EAM3BC,GAN2B,aAM3BA,GAN2B,EAO3BC,GAP2B,aAO3BA,GAP2B;AAAA;AAAA,mBAUNnB,OAAO,CAAC;AAC7BoB,cAAAA,GAAG,mBAAYJ,KAAZ,cAAqBC,IAArB;AAD0B,aAAD,EAE3BC,GAF2B,EAEtBC,GAFsB,CAVD;;AAAA;AAAA;AAUrBE,YAAAA,IAVqB,SAUrBA,IAVqB;AAAA,6CAatB;AACLX,cAAAA,MAAM,EAAEW;AADH,aAbsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA9B;AAkBA,eAAetB,aAAa,CAACU,MAAD,CAA5B","sourcesContent":["import { useRouter } from 'next/router'\r\nimport 'github-markdown-css'\r\nimport WithRepoBasic from '../../components/WithRepoBasic'\r\nimport { request } from '../../lib/api'\r\nimport initCache from '../../lib/client-cache'\r\nimport { genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util'\r\nimport MarkdownRenderer from '../../components/MarkdownRenderer'\r\n\r\nconst { cache, useCache } = initCache({\r\n  genCacheKeyStrate: (context) => {\r\n    return genDetailCacheKeyStrate(context)\r\n  },\r\n})\r\nconst Detail = ({ readme }) => {\r\n  const router = useRouter()\r\n  useCache(genDetailCacheKey(router), {\r\n    readme,\r\n  })\r\n\r\n  return (\r\n    <MarkdownRenderer\r\n      isBase64\r\n      content={readme.content}\r\n    />\r\n  )\r\n}\r\n\r\nDetail.getInitialProps = cache(async ({ \r\n  ctx: {\r\n    query: {\r\n      owner,\r\n      name,\r\n    },\r\n    req,\r\n    res,\r\n  },\r\n}) => {\r\n  const { data } = await request({\r\n    url: `/repos/${owner}/${name}/readme`,\r\n  }, req, res)\r\n  return {\r\n    readme: data,\r\n  }\r\n})\r\n\r\nexport default WithRepoBasic(Detail)\r\n"]},"metadata":{},"sourceType":"module"}