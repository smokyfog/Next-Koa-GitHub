{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/pagination/style/css\";\nimport _Pagination from \"antd/lib/pagination\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport { memo, isValidElement } from 'react';\nimport Link from 'next/link';\n\nconst atob = require('atob');\n\nimport Repo from '../components/Repo';\nimport { genCacheKeyByQuery } from '../lib/util';\nimport classNames from 'classnames';\n\nconst api = require('../lib/api');\n\nglobal.atob = atob;\n/**\r\n  * 关心的search条件\r\n  * sort: 排序方式\r\n  * order: 排序升降顺序\r\n  * lang: 仓库开发主语言\r\n  * page: 分页\r\n  */\n\nconst LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Vue', 'React'];\nconst SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Starts',\n  sort: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Starts',\n  sort: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  sort: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  sort: 'forks',\n  order: 'asc'\n}];\nconst PER_PAGE = 20;\nconst FilterLink = memo(({\n  children,\n  query,\n  lang,\n  sort,\n  order,\n  page,\n  selected\n}) => {\n  if (selected) {\n    return __jsx(\"span\", null, children);\n  }\n\n  let queryString = `?query=${query}`;\n\n  if (lang) {\n    queryString += `&lang=${lang}`;\n  }\n\n  if (sort) {\n    queryString += `&sort=${sort}&order=${order}`;\n  }\n\n  if (page) {\n    queryString += `&page=${page}`;\n  }\n\n  queryString += `&per_page=${PER_PAGE}`;\n  return __jsx(Link, {\n    href: `/search${queryString}`\n  }, isValidElement(children) ? children : __jsx(\"a\", null, children));\n});\n\nfunction Search({\n  router,\n  repos\n}) {\n  const {\n    query\n  } = router;\n  const {\n    sort,\n    order,\n    lang,\n    page = 1\n  } = query;\n  return __jsx(\"div\", {\n    className: \"jsx-91971202\" + \" \" + \"root\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    header: __jsx(\"span\", {\n      className: \"jsx-91971202\" + \" \" + \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    renderItem: language => {\n      const selected = lang === language;\n      return __jsx(_List.Item, {\n        className: classNames({\n          selected\n        })\n      }, __jsx(FilterLink, _extends({}, router.query, {\n        selected: selected,\n        lang: language\n      }), language));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    style: {\n      marginBottom: 20\n    },\n    dataSource: SORT_TYPES,\n    header: __jsx(\"span\", {\n      className: \"jsx-91971202\" + \" \" + \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    renderItem: sortItem => {\n      const {\n        name: itemName,\n        sort: itemSort,\n        order: itemOrder\n      } = sortItem;\n      let selected = false;\n\n      if (itemName === 'Best Match' && !sort) {\n        selected = true;\n      } else if (itemSort === sort && itemOrder === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        className: classNames({\n          selected\n        })\n      }, __jsx(FilterLink, _extends({}, router.query, {\n        selected: selected,\n        sort: itemSort,\n        order: itemOrder\n      }), itemName));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-91971202\" + \" \" + \"repos-title\"\n  }, repos.total_count, \" \\u4E2A\\u4ED3\\u5E93\"), repos.items.map(repo => __jsx(Repo, {\n    repo: repo,\n    key: repo.id\n  })), __jsx(\"div\", {\n    className: \"jsx-91971202\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: PER_PAGE,\n    current: Number(page) // github api限制请求前1000条\n    ,\n    total: Math.min(repos.total_count, 1000),\n    onChange: () => {},\n    itemRender: (renderPage, renderType, renderOl) => {\n      const targetPage = renderType === 'page' ? renderPage : renderType === 'prev' ? page - 1 : page + 1;\n      const name = renderType === 'page' ? renderPage : renderOl;\n      return __jsx(FilterLink, _extends({}, router.query, {\n        page: targetPage\n      }), name);\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"91971202\"\n  }, \".ant-list-item.selected{border-left:2px solid #e36209;font-weight:100;}.root.jsx-91971202{padding:20px 0;}.list-header.jsx-91971202{font-weight:800;font-size:16px;}.repos-title.jsx-91971202{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}.pagination.jsx-91971202{margin-top:16px;text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\reactStudy\\\\Next-Koa-GitHub\\\\next-github\\\\pages\\\\search.js */\"));\n}\n\nSearch.getInitialProps = async ({\n  ctx\n}) => {\n  const {\n    query,\n    sort,\n    lang,\n    order = 'desc',\n    page\n  } = ctx.query;\n\n  if (!query) {\n    return {\n      repos: {\n        total_count: 0\n      }\n    };\n  }\n\n  let queryString = `?q=${query}`;\n\n  if (lang) {\n    queryString += `+language:${lang}`;\n  }\n\n  if (sort) {\n    queryString += `&sort=${sort}&order=${order}`;\n  }\n\n  if (page) {\n    queryString += `&page=${page}`;\n  }\n\n  queryString += `&per_page=${PER_PAGE}`;\n  const result = await api.request({\n    url: `/search/repositories${queryString}`\n  }, ctx.req, ctx.res);\n  return {\n    repos: result.data\n  };\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\search.js"],"names":["withRouter","memo","isValidElement","Link","atob","require","Repo","genCacheKeyByQuery","classNames","api","global","LANGUAGES","SORT_TYPES","name","sort","order","PER_PAGE","FilterLink","children","query","lang","page","selected","queryString","Search","router","repos","marginBottom","language","sortItem","itemName","itemSort","itemOrder","total_count","items","map","repo","id","Number","Math","min","renderPage","renderType","renderOl","targetPage","getInitialProps","ctx","result","request","url","req","res","data"],"mappings":"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","sourcesContent":["\r\nimport { withRouter } from 'next/router'\r\nimport { memo, isValidElement } from 'react'\r\nimport {\r\n  Row, Col, List, Pagination,\r\n} from 'antd'\r\nimport Link from 'next/link'\r\nconst atob = require('atob')\r\nimport Repo from '../components/Repo'\r\nimport { genCacheKeyByQuery } from '../lib/util'\r\nimport classNames from 'classnames'\r\n\r\nconst api = require('../lib/api')\r\nglobal.atob = atob\r\n\r\n/**\r\n  * 关心的search条件\r\n  * sort: 排序方式\r\n  * order: 排序升降顺序\r\n  * lang: 仓库开发主语言\r\n  * page: 分页\r\n  */\r\n const LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Vue', 'React']\r\n const SORT_TYPES = [\r\n   {\r\n     name: 'Best Match',\r\n   },\r\n   {\r\n     name: 'Most Starts',\r\n     sort: 'stars',\r\n     order: 'desc',\r\n   },\r\n   {\r\n     name: 'Fewest Starts',\r\n     sort: 'stars',\r\n     order: 'asc',\r\n   },\r\n   {\r\n     name: 'Most Forks',\r\n     sort: 'forks',\r\n     order: 'desc',\r\n   },\r\n   {\r\n     name: 'Fewest Forks',\r\n     sort: 'forks',\r\n     order: 'asc',\r\n   },\r\n ]\r\n\r\n const PER_PAGE = 20\r\n\r\n const FilterLink = memo(({\r\n  children, query, lang, sort, order, page, selected,\r\n}) => {\r\n  if (selected) {\r\n    return <span>{children}</span>\r\n  }\r\n\r\n  let queryString = `?query=${query}`\r\n\r\n  if (lang) {\r\n    queryString += `&lang=${lang}`\r\n  }\r\n\r\n  if (sort) {\r\n    queryString += `&sort=${sort}&order=${order}`\r\n  }\r\n\r\n  if (page) {\r\n    queryString += `&page=${page}`\r\n  }\r\n\r\n  queryString += `&per_page=${PER_PAGE}`\r\n\r\n  return (\r\n    <Link href={`/search${queryString}`}>\r\n      {isValidElement(children) ? children : <a>{children}</a>}\r\n    </Link>\r\n  )\r\n})\r\n\r\n\r\nfunction Search({ router, repos }) {\r\n  const { query } = router\r\n  const {\r\n    sort, order, lang, page = 1,\r\n  } = query\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            header={(\r\n              <span className=\"list-header\">语言</span>\r\n            )}\r\n            renderItem={(language) => {\r\n              const selected = lang === language\r\n\r\n              return (\r\n                <List.Item className={classNames({\r\n                  selected,\r\n                })}\r\n                >\r\n                  <FilterLink\r\n                    {...router.query}\r\n                    selected={selected}\r\n                    lang={language}\r\n                  >{language}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              )\r\n            }}\r\n          />\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={SORT_TYPES}\r\n            header={(\r\n              <span className=\"list-header\">排序</span>\r\n            )}\r\n            renderItem={(sortItem) => {\r\n              const { name: itemName, sort: itemSort, order: itemOrder } = sortItem\r\n              let selected = false\r\n              if (itemName === 'Best Match' && !sort) {\r\n                selected = true\r\n              } else if (itemSort === sort && itemOrder === order) {\r\n                selected = true\r\n              }\r\n              return (\r\n                <List.Item className={classNames({\r\n                  selected,\r\n                })}\r\n                >\r\n                  <FilterLink\r\n                    {...router.query}\r\n                    selected={selected}\r\n                    sort={itemSort}\r\n                    order={itemOrder}\r\n                  >{itemName}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              )\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={18}>\r\n          <h3 className=\"repos-title\">{repos.total_count} 个仓库</h3>\r\n          {\r\n            repos.items.map((repo) => <Repo repo={repo} key={repo.id} />)\r\n          }\r\n          <div className=\"pagination\">\r\n            <Pagination\r\n              pageSize={PER_PAGE}\r\n              current={Number(page)}\r\n              // github api限制请求前1000条\r\n              total={Math.min(repos.total_count, 1000)}\r\n              onChange={() => {}}\r\n              itemRender={(renderPage, renderType, renderOl) => {\r\n                const targetPage = renderType === 'page'\r\n                  ? renderPage\r\n                  : renderType === 'prev'\r\n                    ? page - 1\r\n                    : page + 1\r\n\r\n                const name = renderType === 'page' ? renderPage : renderOl\r\n\r\n                return <FilterLink {...router.query} page={targetPage}>{name}</FilterLink>\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <style jsx>{`\r\n        :global(.ant-list-item.selected) {\r\n          border-left: 2px solid #e36209;\r\n          font-weight: 100\r\n        }\r\n        \r\n        .root {\r\n          padding: 20px 0;\r\n        }\r\n\r\n        .list-header {\r\n          font-weight: 800;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .repos-title {\r\n          border-bottom: 1px solid #eee;\r\n          font-size: 24px;\r\n          line-height: 50px;\r\n        }\r\n\r\n        .pagination {\r\n          margin-top: 16px;\r\n          text-align: right;\r\n        }\r\n       `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  const {\r\n    query, sort, lang, order = 'desc', page,\r\n  } = ctx.query\r\n\r\n  if (!query) {\r\n    return {\r\n      repos: {\r\n        total_count: 0,\r\n      },\r\n    }\r\n  }\r\n\r\n  let queryString = `?q=${query}`\r\n\r\n  if (lang) {\r\n    queryString += `+language:${lang}`\r\n  }\r\n\r\n  if (sort) {\r\n    queryString += `&sort=${sort}&order=${order}`\r\n  }\r\n\r\n  if (page) {\r\n    queryString += `&page=${page}`\r\n  }\r\n\r\n  queryString += `&per_page=${PER_PAGE}`\r\n\r\n  const result = await api.request({\r\n    url: `/search/repositories${queryString}`,\r\n  }, ctx.req, ctx.res)\r\n\r\n  return {\r\n    repos: result.data,\r\n  }\r\n}\r\n\r\nexport default withRouter(Search)"]},"metadata":{},"sourceType":"module"}