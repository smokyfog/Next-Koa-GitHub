{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useMemo } from 'react';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js/lib/highlight';\nimport atob from 'atob';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport 'highlight.js/styles/default.css';\nimport 'github-markdown-css';\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('js', javascript);\nconst md = new MarkdownIt({\n  html: true,\n  linkify: true,\n\n  highlight(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str, true).value;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    return ''; // 使用额外的默认转义\n  }\n\n});\n\nconst b64ToUtf8 = str => {\n  return decodeURIComponent(escape(atob(str)));\n};\n\nlet hljsInited = false;\nexport default memo(({\n  content,\n  isBase64\n}) => {\n  const converted = isBase64 ? b64ToUtf8(content) : content;\n  const html = useMemo(() => md.render(converted), [converted]);\n\n  if (!hljsInited && false) {\n    hljs.initHighlightingOnLoad();\n    hljsInited = true;\n  }\n\n  return __jsx(\"div\", {\n    className: \"markdown-body\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }));\n});","map":{"version":3,"sources":["D:\\reactStudy\\Next-Koa-GitHub\\next-github\\components\\MarkdownRenderer.jsx"],"names":["memo","useMemo","MarkdownIt","hljs","atob","javascript","registerLanguage","md","html","linkify","highlight","str","lang","getLanguage","value","e","console","error","b64ToUtf8","decodeURIComponent","escape","hljsInited","content","isBase64","converted","render","initHighlightingOnLoad","__html"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAO,iCAAP;AACA,OAAO,qBAAP;AAEAF,IAAI,CAACG,gBAAL,CAAsB,YAAtB,EAAoCD,UAApC;AACAF,IAAI,CAACG,gBAAL,CAAsB,IAAtB,EAA4BD,UAA5B;AACA,MAAME,EAAE,GAAG,IAAIL,UAAJ,CAAe;AACxBM,EAAAA,IAAI,EAAE,IADkB;AAExBC,EAAAA,OAAO,EAAE,IAFe;;AAGxBC,EAAAA,SAAS,CAACC,GAAD,EAAMC,IAAN,EAAY;AACnB,QAAIA,IAAI,IAAIT,IAAI,CAACU,WAAL,CAAiBD,IAAjB,CAAZ,EAAoC;AAClC,UAAI;AACF,eAAOT,IAAI,CAACO,SAAL,CAAeE,IAAf,EAAqBD,GAArB,EAA0B,IAA1B,EAAgCG,KAAvC;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AAAEC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AAAkB;AACjC;;AACD,WAAO,EAAP,CANmB,CAMR;AACZ;;AAVuB,CAAf,CAAX;;AAaA,MAAMG,SAAS,GAAIP,GAAD,IAAS;AACzB,SAAOQ,kBAAkB,CAACC,MAAM,CAAChB,IAAI,CAACO,GAAD,CAAL,CAAP,CAAzB;AACD,CAFD;;AAIA,IAAIU,UAAU,GAAG,KAAjB;AACA,eAAerB,IAAI,CAAC,CAAC;AAAEsB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAC7C,QAAMC,SAAS,GAAGD,QAAQ,GAAGL,SAAS,CAACI,OAAD,CAAZ,GAAwBA,OAAlD;AACA,QAAMd,IAAI,GAAGP,OAAO,CAAC,MAAMM,EAAE,CAACkB,MAAH,CAAUD,SAAV,CAAP,EAA6B,CAACA,SAAD,CAA7B,CAApB;;AACA,MAAI,CAACH,UAAD,SAAJ,EAAkD;AAChDlB,IAAAA,IAAI,CAACuB,sBAAL;AACAL,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,uBAAuB,EAAE;AAAEM,MAAAA,MAAM,EAAEnB;AAAV;AAA9B,IADF,CADF;AAKD,CAbkB,CAAnB","sourcesContent":["import { memo, useMemo } from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport hljs from 'highlight.js/lib/highlight';\r\nimport atob from 'atob'\r\nimport javascript from 'highlight.js/lib/languages/javascript';\r\nimport 'highlight.js/styles/default.css'\r\nimport 'github-markdown-css'\r\n\r\nhljs.registerLanguage('javascript', javascript);\r\nhljs.registerLanguage('js', javascript);\r\nconst md = new MarkdownIt({\r\n  html: true,\r\n  linkify: true,\r\n  highlight(str, lang) {\r\n    if (lang && hljs.getLanguage(lang)) {\r\n      try {\r\n        return hljs.highlight(lang, str, true).value;\r\n      } catch (e) { console.error(e) }\r\n    }\r\n    return ''; // 使用额外的默认转义\r\n  },\r\n})\r\n\r\nconst b64ToUtf8 = (str) => {\r\n  return decodeURIComponent(escape(atob(str)))\r\n}\r\n\r\nlet hljsInited = false\r\nexport default memo(({ content, isBase64 }) => {\r\n  const converted = isBase64 ? b64ToUtf8(content) : content\r\n  const html = useMemo(() => md.render(converted), [converted])\r\n  if (!hljsInited && typeof window !== 'undefined') {\r\n    hljs.initHighlightingOnLoad()\r\n    hljsInited = true\r\n  }\r\n\r\n  return (\r\n    <div className=\"markdown-body\">\r\n      <div dangerouslySetInnerHTML={{ __html: html }} />\r\n    </div>\r\n  )\r\n})\r\n"]},"metadata":{},"sourceType":"module"}