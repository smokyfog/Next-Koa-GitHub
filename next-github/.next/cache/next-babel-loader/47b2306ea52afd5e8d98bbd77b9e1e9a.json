{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Layout from '../components/layout';\nimport { Provider } from 'react-redux';\nimport store from '../store/store';\nimport testHoc from '../lib/with-redux';\nimport PageLoading from '../components/PageLoading';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: 'value',\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    Router.events.on('routeChangeStart', this.startLoading);\n    Router.events.on('routeChangeComplete', this.stopLoading);\n    Router.events.on('routeChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.startLoading);\n    Router.events.off('routeChangeComplete', this.stopLoading);\n    Router.events.off('routeChangeError', this.stopLoading);\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, this.state.loading ? __jsx(PageLoading, null) : null, __jsx(Layout, null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"Index\")), __jsx(Link, {\n      href: \"/detail\"\n    }, __jsx(\"a\", null, \"detail\")), __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default testHoc(MyApp);","map":{"version":3,"sources":["D:\\study\\Next-Koa-GitHub\\next-github\\pages\\_app.js"],"names":["App","Layout","Provider","store","testHoc","PageLoading","Router","Link","axios","MyApp","context","loading","setState","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","getInitialProps","ctx","Component","pageProps","render","reduxStore","props","state"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;;AAEA,MAAMC,KAAN,SAAoBT,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCACd;AACNU,MAAAA,OAAO,EAAE,OADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KADc;;AAAA,0CAMP,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAVqB;;AAAA,yCAYR,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAhBqB;AAAA;;AAkBtBE,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAV,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAX,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBZ,IAAAA,MAAM,CAACQ,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,YAA3C;AACAV,IAAAA,MAAM,CAACQ,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,WAA9C;AACAX,IAAAA,MAAM,CAACQ,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C;AACD;;AAED,eAAaG,eAAb,CAA8BC,GAA9B,EAAmC;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACA,QAAIE,SAAS,GAAG,EAAhB;;AACA,QAAID,SAAS,CAACF,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMD,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACD;;AACD,WAAO;AACLE,MAAAA;AADK,KAAP;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAuBE,MAAAA;AAAvB,QAAsC,KAAKC,KAAjD;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAGD;AAAlB,OACI,KAAKE,KAAL,CAAWhB,OAAX,GAAqB,MAAC,WAAD,OAArB,GAAsC,IAD1C,EAEE,MAAC,MAAD,QACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,yBADF,CADF,EAIE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,0BADF,CAJF,EAOE,MAAC,SAAD,EAAgBY,SAAhB,CAPF,CAFF,CADF;AAcD;;AAxDqB;;AA2DxB,eAAenB,OAAO,CAACK,KAAD,CAAtB","sourcesContent":["import App from 'next/app'\r\nimport Layout from '../components/layout'\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store/store'\r\nimport testHoc from '../lib/with-redux'\r\nimport PageLoading from '../components/PageLoading'\r\nimport Router from 'next/router'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\n \r\nimport 'antd/dist/antd.css'\r\n\r\nclass MyApp extends App {\r\n  state = {\r\n    context: 'value',\r\n    loading: false\r\n  }\r\n\r\n  startLoading = () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n  }\r\n\r\n  stopLoading = () => {\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Router.events.on('routeChangeStart', this.startLoading)\r\n    Router.events.on('routeChangeComplete', this.stopLoading)\r\n    Router.events.on('routeChangeError', this.stopLoading)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Router.events.off('routeChangeStart', this.startLoading)\r\n    Router.events.off('routeChangeComplete', this.stopLoading)\r\n    Router.events.off('routeChangeError', this.stopLoading)\r\n  }\r\n\r\n  static async getInitialProps (ctx) {\r\n    const { Component } = ctx \r\n    let pageProps = {}\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx)\r\n    }\r\n    return {\r\n      pageProps\r\n    }\r\n  }\r\n  render() {\r\n    const { Component, pageProps,reduxStore } = this.props\r\n    return (\r\n      <Provider store={ reduxStore }>\r\n        { this.state.loading ? <PageLoading />: null }\r\n        <Layout>\r\n          <Link href=\"/\">\r\n            <a>Index</a>\r\n          </Link>\r\n          <Link href=\"/detail\">\r\n            <a>detail</a>\r\n          </Link>\r\n          <Component { ...pageProps } />\r\n        </Layout>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default testHoc(MyApp)"]},"metadata":{},"sourceType":"module"}