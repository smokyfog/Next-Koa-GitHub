{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport 'github-markdown-css';\nimport WithRepoBasic from '../../components/WithRepoBasic';\nimport { request } from '../../lib/api';\nimport initCache from '../../lib/client-cache';\nimport { genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util';\nimport MarkdownRenderer from '../../components/MarkdownRenderer';\nconst {\n  cache,\n  useCache\n} = initCache({\n  genCacheKeyStrate: context => {\n    return genDetailCacheKeyStrate(context);\n  }\n});\n\nconst Detail = ({\n  readme\n}) => {\n  const router = useRouter();\n  useCache(genDetailCacheKey(router), {\n    readme\n  });\n  return __jsx(MarkdownRenderer, {\n    isBase64: true,\n    content: readme.content\n  });\n};\n\nDetail.getInitialProps = cache(async ({\n  ctx: {\n    query: {\n      owner,\n      name\n    },\n    req,\n    res\n  }\n}) => {\n  const {\n    data\n  } = await request({\n    url: `/repos/${owner}/${name}/readme`\n  }, req, res);\n  return {\n    readme: data\n  };\n});\nexport default WithRepoBasic(Detail);","map":{"version":3,"sources":["D:\\reactStudy\\Next-Koa-GitHub\\next-github\\pages\\detail\\index.jsx"],"names":["useRouter","WithRepoBasic","request","initCache","genDetailCacheKeyStrate","genDetailCacheKey","MarkdownRenderer","cache","useCache","genCacheKeyStrate","context","Detail","readme","router","content","getInitialProps","ctx","query","owner","name","req","res","data","url"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,uBAAT,EAAkCC,iBAAlC,QAA2D,gBAA3D;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBL,SAAS,CAAC;AACpCM,EAAAA,iBAAiB,EAAGC,OAAD,IAAa;AAC9B,WAAON,uBAAuB,CAACM,OAAD,CAA9B;AACD;AAHmC,CAAD,CAArC;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7B,QAAMC,MAAM,GAAGb,SAAS,EAAxB;AACAQ,EAAAA,QAAQ,CAACH,iBAAiB,CAACQ,MAAD,CAAlB,EAA4B;AAClCD,IAAAA;AADkC,GAA5B,CAAR;AAIA,SACE,MAAC,gBAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAEA,MAAM,CAACE;AAFlB,IADF;AAMD,CAZD;;AAcAH,MAAM,CAACI,eAAP,GAAyBR,KAAK,CAAC,OAAO;AACpCS,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KADK;AAELC,MAAAA;AAFK,KADJ;AAKHC,IAAAA,GALG;AAMHC,IAAAA;AANG;AAD+B,CAAP,KASzB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAAC;AAC7BqB,IAAAA,GAAG,EAAG,UAASL,KAAM,IAAGC,IAAK;AADA,GAAD,EAE3BC,GAF2B,EAEtBC,GAFsB,CAA9B;AAGA,SAAO;AACLT,IAAAA,MAAM,EAAEU;AADH,GAAP;AAGD,CAhB6B,CAA9B;AAkBA,eAAerB,aAAa,CAACU,MAAD,CAA5B","sourcesContent":["import { useRouter } from 'next/router'\r\nimport 'github-markdown-css'\r\nimport WithRepoBasic from '../../components/WithRepoBasic'\r\nimport { request } from '../../lib/api'\r\nimport initCache from '../../lib/client-cache'\r\nimport { genDetailCacheKeyStrate, genDetailCacheKey } from '../../lib/util'\r\nimport MarkdownRenderer from '../../components/MarkdownRenderer'\r\n\r\nconst { cache, useCache } = initCache({\r\n  genCacheKeyStrate: (context) => {\r\n    return genDetailCacheKeyStrate(context)\r\n  },\r\n})\r\nconst Detail = ({ readme }) => {\r\n  const router = useRouter()\r\n  useCache(genDetailCacheKey(router), {\r\n    readme,\r\n  })\r\n\r\n  return (\r\n    <MarkdownRenderer\r\n      isBase64\r\n      content={readme.content}\r\n    />\r\n  )\r\n}\r\n\r\nDetail.getInitialProps = cache(async ({ \r\n  ctx: {\r\n    query: {\r\n      owner,\r\n      name,\r\n    },\r\n    req,\r\n    res,\r\n  },\r\n}) => {\r\n  const { data } = await request({\r\n    url: `/repos/${owner}/${name}/readme`,\r\n  }, req, res)\r\n  return {\r\n    readme: data,\r\n  }\r\n})\r\n\r\nexport default WithRepoBasic(Detail)\r\n"]},"metadata":{},"sourceType":"module"}