{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { add } from '../store/store';\nconst event = ['routeChageStart', 'routeChangeComplete', 'routeChangeError', 'beforeHistoryChange', 'hashChangeStart', 'hashChangeComplete '];\n\nfunction makeEvent(type) {\n  return (...args) => {\n    console.log(type, ...args);\n  };\n}\n\nevent.forEach(event => {\n  Router.events.on(event, makeEvent(event));\n});\n\nconst Index = ({\n  counter,\n  username,\n  rename,\n  add\n}) => {\n  function gotoTestB() {\n    // Router.push('/test/bbb?id=2')\n    // 或\n    Router.push({\n      pathname: '/test/bbb',\n      query: {\n        id: 2\n      }\n    }, '/test/bbb/2');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(_Button, {\n    onClick: gotoTestB\n  }, \"test b\"), __jsx(\"span\", null, \"Count: \", counter), __jsx(\"a\", null, \"username: \", username), __jsx(\"br\", null), __jsx(\"input\", {\n    value: username,\n    onChange: e => {\n      rename(e.target.value);\n    }\n  }), __jsx(\"button\", {\n    onClick: () => add(counter)\n  }, \"do add\"));\n};\n\nIndex.getInitialProps = async ({\n  reduxStore\n}) => {\n  reduxStore.dispatch(add(3));\n  return {};\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    counter: state.counter.count,\n    username: state.user.username\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    add: num => dispatch({\n      type: 'ADD',\n      num\n    }),\n    rename: name => dispatch({\n      type: \"UPDATE_USERNAME\",\n      name\n    })\n  };\n})(Index); // export default () => (\n//   <Link href='test/bbb'>\n//     <div>\n//       <Button>index</Button>\n//       <Button>index</Button>\n//     </div>\n//   </Link>\n// )","map":{"version":3,"sources":["D:\\study\\Next-Koa-GitHub\\next-github\\pages\\index.js"],"names":["Router","connect","add","event","makeEvent","type","args","console","log","forEach","events","on","Index","counter","username","rename","gotoTestB","push","pathname","query","id","e","target","value","getInitialProps","reduxStore","dispatch","mapStateToProps","state","count","user","mapDispatchToProps","num","name"],"mappings":";;;;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,GAAT,QAAoB,gBAApB;AAEA,MAAMC,KAAK,GAAG,CACZ,iBADY,EAEZ,qBAFY,EAGZ,kBAHY,EAIZ,qBAJY,EAKZ,iBALY,EAMZ,qBANY,CAAd;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAO,CAAC,GAAGC,IAAJ,KAAa;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,GAAGC,IAArB;AACD,GAFD;AAGD;;AAEDH,KAAK,CAACM,OAAN,CAAcN,KAAK,IAAI;AACrBH,EAAAA,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiBR,KAAjB,EAAwBC,SAAS,CAACD,KAAD,CAAjC;AACD,CAFD;;AAKA,MAAMS,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,MAArB;AAA6Bb,EAAAA;AAA7B,CAAD,KAAwC;AACpD,WAASc,SAAT,GAAqB;AACnB;AACA;AACAhB,IAAAA,MAAM,CAACiB,IAAP,CAAY;AACVC,MAAAA,QAAQ,EAAE,WADA;AAEVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAE;AADC;AAFG,KAAZ,EAKG,aALH;AAMD;;AACD,SACE,4BACE;AAAQ,IAAA,OAAO,EAAGJ;AAAlB,cADF,EAIE,+BAAeH,OAAf,CAJF,EAKE,+BAAeC,QAAf,CALF,EAME,iBANF,EAOE;AAAO,IAAA,KAAK,EAAGA,QAAf;AAA0B,IAAA,QAAQ,EAAGO,CAAD,IAAO;AAACN,MAAAA,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AAAuB;AAAnE,IAPF,EAQE;AAAQ,IAAA,OAAO,EAAE,MAAMrB,GAAG,CAACW,OAAD;AAA1B,cARF,CADF;AAYD,CAvBD;;AAyBAD,KAAK,CAACY,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAA0B;AAChDA,EAAAA,UAAU,CAACC,QAAX,CAAoBxB,GAAG,CAAC,CAAD,CAAvB;AACA,SAAO,EAAP;AACD,CAHD;;AAKA,eAAeD,OAAO,CAAC,SAAS0B,eAAT,CAAyBC,KAAzB,EAAgC;AACrD,SAAO;AACLf,IAAAA,OAAO,EAAEe,KAAK,CAACf,OAAN,CAAcgB,KADlB;AAELf,IAAAA,QAAQ,EAAEc,KAAK,CAACE,IAAN,CAAWhB;AAFhB,GAAP;AAID,CALqB,EAKnB,SAASiB,kBAAT,CAA4BL,QAA5B,EAAsC;AACvC,SAAO;AACLxB,IAAAA,GAAG,EAAG8B,GAAD,IAASN,QAAQ,CAAC;AAAErB,MAAAA,IAAI,EAAE,KAAR;AAAe2B,MAAAA;AAAf,KAAD,CADjB;AAELjB,IAAAA,MAAM,EAAGkB,IAAD,IAAUP,QAAQ,CAAC;AAAErB,MAAAA,IAAI,EAAE,iBAAR;AAA2B4B,MAAAA;AAA3B,KAAD;AAFrB,GAAP;AAID,CAVqB,CAAP,CAUZrB,KAVY,CAAf,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Button } from 'antd'\r\nimport Router from 'next/router'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { add } from '../store/store'\r\n \r\nconst event = [\r\n  'routeChageStart',\r\n  'routeChangeComplete',\r\n  'routeChangeError',\r\n  'beforeHistoryChange',\r\n  'hashChangeStart',\r\n  'hashChangeComplete '\r\n]\r\n\r\nfunction makeEvent(type) {\r\n  return (...args) => {\r\n    console.log(type, ...args)\r\n  }\r\n}\r\n\r\nevent.forEach(event => {\r\n  Router.events.on(event, makeEvent(event))\r\n})\r\n\r\n\r\nconst Index = ({ counter, username, rename, add }) => {\r\n  function gotoTestB() {\r\n    // Router.push('/test/bbb?id=2')\r\n    // 或\r\n    Router.push({\r\n      pathname: '/test/bbb',\r\n      query: {\r\n        id: 2\r\n      }\r\n    }, '/test/bbb/2')\r\n  }\r\n  return (\r\n    <>\r\n      <Button onClick={ gotoTestB }>\r\n        test b\r\n      </Button>\r\n      <span>Count: { counter }</span>\r\n      <a>username: { username }</a>\r\n      <br />\r\n      <input value={ username } onChange={(e) => {rename(e.target.value)}} />\r\n      <button onClick={() => add(counter)}>do add</button>\r\n    </>\r\n  )\r\n}\r\n\r\nIndex.getInitialProps = async ({ reduxStore }) => {\r\n  reduxStore.dispatch(add(3))\r\n  return {}\r\n}\r\n\r\nexport default connect(function mapStateToProps(state) {\r\n  return {\r\n    counter: state.counter.count,\r\n    username: state.user.username\r\n  }\r\n}, function mapDispatchToProps(dispatch) {\r\n  return {\r\n    add: (num) => dispatch({ type: 'ADD', num }),\r\n    rename: (name) => dispatch({ type: \"UPDATE_USERNAME\", name })\r\n  }\r\n})(Index)\r\n\r\n// export default () => (\r\n//   <Link href='test/bbb'>\r\n//     <div>\r\n//       <Button>index</Button>\r\n//       <Button>index</Button>\r\n//     </div>\r\n//   </Link>\r\n// )\r\n"]},"metadata":{},"sourceType":"module"}