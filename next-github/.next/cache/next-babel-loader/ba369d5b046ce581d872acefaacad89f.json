{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initialState = {\n  count: 0\n};\nconst userInitialState = {\n  username: 'jack',\n  age: 18\n};\nconst ADD = 'ADD';\n\nfunction countReducer(state = initialState, action) {\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst allReducers = combineReducers({\n  counter: countReducer,\n  user: userReducer\n});\nconst store = createStore(allReducers, {\n  counter: initialState,\n  user: userInitialState\n}, composeWithDevTools(applyMiddleware(ReduxThunk))); // action creatore\n// 同步的dispatch\n\nfunction add(num) {\n  return {\n    type: ADD,\n    num\n  };\n} // 异步的dispatch\n\n\nfunction addAsync(num) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(add(num));\n    }, 1000);\n  };\n} // console.log(store)\n// console.log(store.getState())\n\n\nstore.dispatch(add(3));\nstore.subscribe(() => {\n  // \n  console.log(store.getState());\n});\nstore.dispatch(addAsync(5)); // store.dispatch({ type: ADD })\n\nstore.dispatch({\n  type: UPDATE_USERNAME,\n  name: 'lilei'\n});\nexport default function initializeStore(state) {\n  const store = createStore(allReducers, _Object$assign({}, {\n    counter: initialState,\n    user: userInitialState\n  }, state), // {\n  //   counter: initialState,\n  //   user: userInitialState\n  // },\n  composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:\\study\\Next-Koa-GitHub\\next-github\\store\\store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","initialState","count","userInitialState","username","age","ADD","countReducer","state","action","console","log","type","num","UPDATE_USERNAME","userReducer","name","allReducers","counter","user","store","add","addAsync","dispatch","setTimeout","subscribe","getState","initializeStore"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,MADa;AAEvBC,EAAAA,GAAG,EAAE;AAFkB,CAAzB;AAKA,MAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,YAAT,CAAsBC,KAAK,GAAGP,YAA9B,EAA4CQ,MAA5C,EAAoD;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKN,GAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,IAAeO,MAAM,CAACI,GAAP,IAAc,CAA7B;AAAT,OAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD;;AAED,MAAMM,eAAe,GAAG,iBAAxB;;AACA,SAASC,WAAT,CAAqBP,KAAK,GAAGL,gBAA7B,EAA+CM,MAA/C,EAAuD;AACrD,UAAOA,MAAM,CAACG,IAAd;AACE,SAAKE,eAAL;AACE,+BACKN,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACO;AAFnB;;AAIF;AACE,aAAOR,KAAP;AAPJ;AASD;;AAED,MAAMS,WAAW,GAAGpB,eAAe,CAAC;AAClCqB,EAAAA,OAAO,EAAEX,YADyB;AAElCY,EAAAA,IAAI,EAAEJ;AAF4B,CAAD,CAAnC;AAKA,MAAMK,KAAK,GAAGxB,WAAW,CACvBqB,WADuB,EAEvB;AACEC,EAAAA,OAAO,EAAEjB,YADX;AAEEkB,EAAAA,IAAI,EAAEhB;AAFR,CAFuB,EAMvBH,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CANI,CAAzB,C,CASA;AACA;;AACA,SAASsB,GAAT,CAAaR,GAAb,EAAkB;AAChB,SAAO;AACLD,IAAAA,IAAI,EAAEN,GADD;AAELO,IAAAA;AAFK,GAAP;AAID,C,CAED;;;AACA,SAASS,QAAT,CAAkBT,GAAlB,EAAuB;AACrB,SAAQU,QAAD,IAAc;AACnBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACF,GAAG,CAACR,GAAD,CAAJ,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD,C,CAED;AACA;;;AACAO,KAAK,CAACG,QAAN,CAAeF,GAAG,CAAC,CAAD,CAAlB;AACAD,KAAK,CAACK,SAAN,CAAgB,MAAM;AAAE;AACtBf,EAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACM,QAAN,EAAZ;AACD,CAFD;AAGAN,KAAK,CAACG,QAAN,CAAeD,QAAQ,CAAC,CAAD,CAAvB,E,CAEA;;AACAF,KAAK,CAACG,QAAN,CAAe;AAAEX,EAAAA,IAAI,EAAEE,eAAR;AAAyBE,EAAAA,IAAI,EAAE;AAA/B,CAAf;AAEA,eAAe,SAASW,eAAT,CAAyBnB,KAAzB,EAAgC;AAC7C,QAAMY,KAAK,GAAGxB,WAAW,CACvBqB,WADuB,EAEvB,eAAc,EAAd,EAAkB;AAChBC,IAAAA,OAAO,EAAEjB,YADO;AAEhBkB,IAAAA,IAAI,EAAEhB;AAFU,GAAlB,EAGGK,KAHH,CAFuB,EAMvB;AACA;AACA;AACA;AACAR,EAAAA,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAVI,CAAzB;AAYA,SAAOqB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst initialState = {\r\n  count: 0\r\n}\r\n\r\nconst userInitialState = {\r\n  username: 'jack',\r\n  age: 18\r\n}\r\n\r\nconst ADD = 'ADD'\r\nfunction countReducer(state = initialState, action) {\r\n  console.log(state, action)\r\n  switch (action.type)  {\r\n    case ADD:\r\n      return { count: state.count + (action.num || 1) }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\r\nfunction userReducer(state = userInitialState, action) {\r\n  switch(action.type) {\r\n    case UPDATE_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.name\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n  counter: countReducer,\r\n  user: userReducer\r\n})\r\n\r\nconst store = createStore(\r\n  allReducers, \r\n  {\r\n    counter: initialState,\r\n    user: userInitialState\r\n  },\r\n  composeWithDevTools(applyMiddleware(ReduxThunk))\r\n)\r\n\r\n// action creatore\r\n// 同步的dispatch\r\nfunction add(num) {\r\n  return {\r\n    type: ADD,\r\n    num\r\n  }\r\n}\r\n\r\n// 异步的dispatch\r\nfunction addAsync(num) {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(add(num))\r\n    }, 1000)\r\n  }\r\n}\r\n\r\n// console.log(store)\r\n// console.log(store.getState())\r\nstore.dispatch(add(3))\r\nstore.subscribe(() => { // \r\n  console.log(store.getState())\r\n})\r\nstore.dispatch(addAsync(5))\r\n\r\n// store.dispatch({ type: ADD })\r\nstore.dispatch({ type: UPDATE_USERNAME, name: 'lilei' })\r\n\r\nexport default function initializeStore(state) {\r\n  const store = createStore(\r\n    allReducers, \r\n    Object.assign({}, {\r\n      counter: initialState,\r\n      user: userInitialState\r\n    }, state),\r\n    // {\r\n    //   counter: initialState,\r\n    //   user: userInitialState\r\n    // },\r\n    composeWithDevTools(applyMiddleware(ReduxThunk))\r\n  )\r\n  return store\r\n}"]},"metadata":{},"sourceType":"module"}